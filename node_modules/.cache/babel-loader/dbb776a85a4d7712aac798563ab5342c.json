{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dokumente\\\\GitHub\\\\smurf\\\\SMURF-frontend\\\\src\\\\views\\\\Home\\\\components\\\\FarmStakingCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Heading, Card, CardBody, Button } from '@blzd-dev/uikit';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport useI18n from 'hooks/useI18n';\nimport { useAllHarvest } from 'hooks/useHarvest';\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance';\nimport UnlockButton from 'components/UnlockButton';\nimport BlzdHarvestBalance from './BlzdHarvestBalance';\nimport BlzdWalletBalance from './BlzdWalletBalance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledFarmStakingCard = styled(Card)`\n  background-image: url('https://raw.githubusercontent.com/octahedron22/smurf-frontend/master/public/images/smurf/2a.png');\n  background-size: 256px;\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`;\n_c = StyledFarmStakingCard;\nconst Block = styled.div`\n  margin-bottom: 16px;\n`;\n_c2 = Block;\nconst TokenImageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n_c3 = TokenImageWrapper;\nconst CardImage = styled.img`\n  margin-right: 8px;\n`;\n_c4 = CardImage;\nconst Label = styled.div`\n  color: ${({\n  theme\n}) => theme.colors.textSubtle};\n  font-size: 14px;\n`;\n_c5 = Label;\nconst Actions = styled.div`\n  margin-top: 24px;\n`;\n_c6 = Actions;\n\nconst FarmedStakingCard = () => {\n  _s();\n\n  const [pendingTx, setPendingTx] = useState(false);\n  const {\n    account\n  } = useWallet();\n  const TranslateString = useI18n();\n  const farmsWithBalance = useFarmsWithBalance();\n  const balancesWithValue = farmsWithBalance.filter(balanceType => balanceType.balance.toNumber() > 0);\n  const {\n    onReward\n  } = useAllHarvest(balancesWithValue.map(farmWithBalance => farmWithBalance.pid));\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true);\n\n    try {\n      await onReward();\n    } catch (error) {// TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false);\n    }\n  }, [onReward]);\n  const addWatchBlzdToken = useCallback(async () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const provider = window.ethereum;\n\n    if (provider) {\n      try {\n        // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n        const wasAdded = await provider.request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'ERC20',\n            options: {\n              address: '0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\n              symbol: 'SMURF',\n              decimals: '18',\n              image: 'https://raw.githubusercontent.com/octahedron22/smurf-frontend/master/public/images/farms/smurf.png'\n            }\n          }\n        });\n\n        if (wasAdded) {\n          console.log('Token was added');\n        }\n      } catch (error) {// TODO: find a way to handle when the user rejects transaction or it fails\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledFarmStakingCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"xl\",\n        mb: \"24px\",\n        children: TranslateString(542, 'Farms & Staking')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TokenImageWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(CardImage, {\n          src: \"https://raw.githubusercontent.com/octahedron22/smurf-frontend/master/public/images/smurf/2.png\",\n          alt: \"smurf logo\",\n          width: 64,\n          height: 64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addWatchBlzdToken,\n          scale: \"sm\",\n          children: [\"+\", ' ', /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              marginLeft: 8\n            },\n            width: 16,\n            src: \"https://raw.githubusercontent.com/octahedron22/smurf-frontend/master/public/images/wallet/metamask.png\",\n            alt: \"metamask logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        children: [/*#__PURE__*/_jsxDEV(BlzdHarvestBalance, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: TranslateString(544, 'BLZD to Harvest')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        children: [/*#__PURE__*/_jsxDEV(BlzdWalletBalance, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: TranslateString(546, 'BLZD in Wallet')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Actions, {\n        children: account ? /*#__PURE__*/_jsxDEV(Button, {\n          id: \"harvest-all\",\n          disabled: balancesWithValue.length <= 0 || pendingTx,\n          onClick: harvestAllFarms,\n          children: pendingTx ? TranslateString(548, 'Collecting BLZD') : TranslateString(999, `Harvest all (${balancesWithValue.length})`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(UnlockButton, {\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmedStakingCard, \"SwbGpEhnvnWzgzVfKLCtAPlIn8k=\", false, function () {\n  return [useWallet, useI18n, useFarmsWithBalance, useAllHarvest];\n});\n\n_c7 = FarmedStakingCard;\nexport default FarmedStakingCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"StyledFarmStakingCard\");\n$RefreshReg$(_c2, \"Block\");\n$RefreshReg$(_c3, \"TokenImageWrapper\");\n$RefreshReg$(_c4, \"CardImage\");\n$RefreshReg$(_c5, \"Label\");\n$RefreshReg$(_c6, \"Actions\");\n$RefreshReg$(_c7, \"FarmedStakingCard\");","map":{"version":3,"sources":["C:/Dokumente/GitHub/smurf/SMURF-frontend/src/views/Home/components/FarmStakingCard.tsx"],"names":["React","useState","useCallback","styled","Heading","Card","CardBody","Button","useWallet","useI18n","useAllHarvest","useFarmsWithBalance","UnlockButton","BlzdHarvestBalance","BlzdWalletBalance","StyledFarmStakingCard","Block","div","TokenImageWrapper","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","pendingTx","setPendingTx","account","TranslateString","farmsWithBalance","balancesWithValue","filter","balanceType","balance","toNumber","onReward","map","farmWithBalance","pid","harvestAllFarms","error","addWatchBlzdToken","provider","window","ethereum","wasAdded","request","method","params","type","options","address","symbol","decimals","image","console","log","marginLeft","length"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Button } from '@blzd-dev/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useAllHarvest } from 'hooks/useHarvest'\r\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport BlzdHarvestBalance from './BlzdHarvestBalance'\r\nimport BlzdWalletBalance from './BlzdWalletBalance'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  background-image: url('https://raw.githubusercontent.com/octahedron22/smurf-frontend/master/public/images/smurf/2a.png');\r\n  background-size: 256px;\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n  min-height: 376px;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst TokenImageWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst CardImage = styled.img`\r\n  margin-right: 8px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst FarmedStakingCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { account } = useWallet()\r\n  const TranslateString = useI18n()\r\n  const farmsWithBalance = useFarmsWithBalance()\r\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\r\n\r\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\r\n\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      await onReward()\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n  }, [onReward])\r\n\r\n  const addWatchBlzdToken = useCallback(async () => {\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore\r\n    const provider = window.ethereum\r\n    if (provider) {\r\n      try {\r\n        // wasAdded is a boolean. Like any RPC method, an error may be thrown.\r\n        const wasAdded = await provider.request({\r\n          method: 'wallet_watchAsset',\r\n          params: {\r\n            type: 'ERC20',\r\n            options: {\r\n              address: '0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\r\n              symbol: 'SMURF',\r\n              decimals: '18',\r\n              image:\r\n                'https://raw.githubusercontent.com/octahedron22/smurf-frontend/master/public/images/farms/smurf.png',\r\n            },\r\n          },\r\n        })\r\n\r\n        if (wasAdded) {\r\n          console.log('Token was added')\r\n        }\r\n      } catch (error) {\r\n        // TODO: find a way to handle when the user rejects transaction or it fails\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(542, 'Farms & Staking')}\r\n        </Heading>\r\n        <TokenImageWrapper>\r\n          <CardImage\r\n            src=\"https://raw.githubusercontent.com/octahedron22/smurf-frontend/master/public/images/smurf/2.png\"\r\n            alt=\"smurf logo\"\r\n            width={64}\r\n            height={64}\r\n          />\r\n          <Button onClick={addWatchBlzdToken} scale=\"sm\">\r\n            +{' '}\r\n            <img\r\n              style={{ marginLeft: 8 }}\r\n              width={16}\r\n              src=\"https://raw.githubusercontent.com/octahedron22/smurf-frontend/master/public/images/wallet/metamask.png\"\r\n              alt=\"metamask logo\"\r\n            />\r\n          </Button>\r\n        </TokenImageWrapper>\r\n        <Block>\r\n          <BlzdHarvestBalance />\r\n          <Label>{TranslateString(544, 'BLZD to Harvest')}</Label>\r\n        </Block>\r\n        <Block>\r\n          <BlzdWalletBalance />\r\n          <Label>{TranslateString(546, 'BLZD in Wallet')}</Label>\r\n        </Block>\r\n        <Actions>\r\n          {account ? (\r\n            <Button id=\"harvest-all\" disabled={balancesWithValue.length <= 0 || pendingTx} onClick={harvestAllFarms}>\r\n              {pendingTx\r\n                ? TranslateString(548, 'Collecting BLZD')\r\n                : TranslateString(999, `Harvest all (${balancesWithValue.length})`)}\r\n            </Button>\r\n          ) : (\r\n            <UnlockButton fullWidth />\r\n          )}\r\n        </Actions>\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n"]},"metadata":{},"sourceType":"module"}