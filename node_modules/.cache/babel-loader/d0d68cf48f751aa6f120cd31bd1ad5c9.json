{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\smurf.money\\\\blzd-frontend\\\\src\\\\views\\\\Farms\\\\components\\\\FarmCard\\\\StakeAction.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // import styled from 'styled-components'\n\nimport { Button, Flex, Heading, useModal } from '@blzd-dev/uikit'; // import useI18n from 'hooks/useI18n'\n// import useStake from 'hooks/useStake'\n\nimport useUnstake from 'hooks/useUnstake';\nimport { getBalanceNumber } from 'utils/formatBalance'; // import DepositModal from '../DepositModal'\n\nimport WithdrawModal from '../WithdrawModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// const IconButtonWrapper = styled.div`\n//   display: flex;\n//   svg {\n//     width: 20px;\n//   }\n// `\nconst StakeAction = ({\n  stakedBalance,\n  tokenName,\n  pid\n}) => {\n  _s();\n\n  // const TranslateString = useI18n()\n  // const { onStake } = useStake(pid)\n  const {\n    onUnstake\n  } = useUnstake(pid);\n  const rawStakedBalance = getBalanceNumber(stakedBalance);\n  const displayBalance = rawStakedBalance.toLocaleString(); // const [onPresentDeposit] = useModal(\n  //   <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />,\n  // )\n\n  const [onPresentWithdraw] = useModal( /*#__PURE__*/_jsxDEV(WithdrawModal, {\n    max: stakedBalance,\n    onConfirm: onUnstake,\n    tokenName: tokenName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this)); // const renderStakingButtons = () => {\n  //   return rawStakedBalance === 0 ? (\n  //     <Button style={{ width: 107.72 }} onClick={onPresentDeposit}>\n  //       {TranslateString(999, 'Stake')}\n  //     </Button>\n  //   ) : (\n  //     <IconButtonWrapper>\n  //       <IconButton style={{ width: 52 }} variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n  //         <MinusIcon color=\"primary\" />\n  //       </IconButton>\n  //       <IconButton style={{ width: 52 }} variant=\"tertiary\" onClick={onPresentDeposit}>\n  //         <AddIcon color=\"primary\" />\n  //       </IconButton>\n  //     </IconButtonWrapper>\n  //   )\n  // }\n\n  const renderUnstakingButtons = () => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        width: 107.72\n      },\n      onClick: onPresentWithdraw,\n      children: \"Unstake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      color: rawStakedBalance === 0 ? 'textDisabled' : 'text',\n      children: displayBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), renderUnstakingButtons()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StakeAction, \"dOCdI7HOZC62a7JfHohiJQ64ISY=\", false, function () {\n  return [useUnstake, useModal];\n});\n\n_c = StakeAction;\nexport default StakeAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeAction\");","map":{"version":3,"sources":["C:/Users/frkul/Documents/smurf.money/blzd-frontend/src/views/Farms/components/FarmCard/StakeAction.tsx"],"names":["React","Button","Flex","Heading","useModal","useUnstake","getBalanceNumber","WithdrawModal","StakeAction","stakedBalance","tokenName","pid","onUnstake","rawStakedBalance","displayBalance","toLocaleString","onPresentWithdraw","renderUnstakingButtons","width"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,QAAhC,QAAgD,iBAAhD,C,CACA;AACA;;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,gBAAT,QAAiC,qBAAjC,C,CACA;;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;;AAUA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,WAA2C,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,SAAjB;AAA4BC,EAAAA;AAA5B,CAAD,KAAuC;AAAA;;AACzF;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBP,UAAU,CAACM,GAAD,CAAhC;AAEA,QAAME,gBAAgB,GAAGP,gBAAgB,CAACG,aAAD,CAAzC;AACA,QAAMK,cAAc,GAAGD,gBAAgB,CAACE,cAAjB,EAAvB,CANyF,CAQzF;AACA;AACA;;AACA,QAAM,CAACC,iBAAD,IAAsBZ,QAAQ,eAClC,QAAC,aAAD;AAAe,IAAA,GAAG,EAAEK,aAApB;AAAmC,IAAA,SAAS,EAAEG,SAA9C;AAAyD,IAAA,SAAS,EAAEF;AAApE;AAAA;AAAA;AAAA;AAAA,UADkC,CAApC,CAXyF,CAezF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMO,sBAAsB,GAAG,MAAM;AACnC,wBACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAkC,MAAA,OAAO,EAAEF,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND;;AAQA,sBACE,QAAC,IAAD;AAAM,IAAA,cAAc,EAAC,eAArB;AAAqC,IAAA,UAAU,EAAC,QAAhD;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEH,gBAAgB,KAAK,CAArB,GAAyB,cAAzB,GAA0C,MAA1D;AAAA,gBAAmEC;AAAnE;AAAA;AAAA;AAAA;AAAA,YADF,EAEGG,sBAAsB,EAFzB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA9CD;;GAAMT,W;UAGkBH,U,EAQMD,Q;;;KAXxBI,W;AAgDN,eAAeA,WAAf","sourcesContent":["import React from 'react'\r\n// import styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, useModal } from '@blzd-dev/uikit'\r\n// import useI18n from 'hooks/useI18n'\r\n// import useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\n// import DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  depositFeeBP?: number\r\n}\r\n\r\n// const IconButtonWrapper = styled.div`\r\n//   display: flex;\r\n//   svg {\r\n//     width: 20px;\r\n//   }\r\n// `\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({ stakedBalance, tokenName, pid }) => {\r\n  // const TranslateString = useI18n()\r\n  // const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n\r\n  // const [onPresentDeposit] = useModal(\r\n  //   <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />,\r\n  // )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  // const renderStakingButtons = () => {\r\n  //   return rawStakedBalance === 0 ? (\r\n  //     <Button style={{ width: 107.72 }} onClick={onPresentDeposit}>\r\n  //       {TranslateString(999, 'Stake')}\r\n  //     </Button>\r\n  //   ) : (\r\n  //     <IconButtonWrapper>\r\n  //       <IconButton style={{ width: 52 }} variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n  //         <MinusIcon color=\"primary\" />\r\n  //       </IconButton>\r\n  //       <IconButton style={{ width: 52 }} variant=\"tertiary\" onClick={onPresentDeposit}>\r\n  //         <AddIcon color=\"primary\" />\r\n  //       </IconButton>\r\n  //     </IconButtonWrapper>\r\n  //   )\r\n  // }\r\n\r\n  const renderUnstakingButtons = () => {\r\n    return (\r\n      <Button style={{ width: 107.72 }} onClick={onPresentWithdraw}>\r\n        Unstake\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n      {renderUnstakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n"]},"metadata":{},"sourceType":"module"}