{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/frkul/Documents/smurf.money/blzd-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/frkul/Documents/smurf.money/blzd-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/frkul/Documents/smurf.money/blzd-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/frkul/Documents/smurf.money/blzd-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useMemo,useState,useCallback}from'react';import styled from'styled-components';import{getContract}from'utils/erc20';import{Button,Flex,Text}from'@blzd-dev/uikit';import{useFarmFromPid,useFarmUser}from'state/hooks';import useI18n from'hooks/useI18n';import UnlockButton from'components/UnlockButton';import{useApprove}from'hooks/useApprove';import StakeAction from'./StakeAction';import HarvestAction from'./HarvestAction';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Action=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding-top: 16px;\\n\"])));var CardActions=function CardActions(_ref){var farm=_ref.farm,ethereum=_ref.ethereum,account=_ref.account,removed=_ref.removed;var TranslateString=useI18n();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),requestedApproval=_useState2[0],setRequestedApproval=_useState2[1];var _useFarmFromPid=useFarmFromPid(farm.pid),pid=_useFarmFromPid.pid,lpAddresses=_useFarmFromPid.lpAddresses,tokenAddresses=_useFarmFromPid.tokenAddresses,isTokenOnly=_useFarmFromPid.isTokenOnly,depositFeeBP=_useFarmFromPid.depositFeeBP;var _useFarmUser=useFarmUser(pid),allowance=_useFarmUser.allowance,tokenBalance=_useFarmUser.tokenBalance,stakedBalance=_useFarmUser.stakedBalance,earnings=_useFarmUser.earnings;var lpAddress=lpAddresses[process.env.REACT_APP_CHAIN_ID];var tokenAddress=tokenAddresses[process.env.REACT_APP_CHAIN_ID];var lpName=farm.lpSymbol.toUpperCase();var isApproved=account&&allowance&&allowance.isGreaterThan(0);var lpContract=useMemo(function(){if(isTokenOnly){return getContract(ethereum,tokenAddress);}return getContract(ethereum,lpAddress);},[ethereum,lpAddress,tokenAddress,isTokenOnly]);var _useApprove=useApprove(lpContract),onApprove=_useApprove.onApprove;var handleApprove=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setRequestedApproval(true);_context.next=4;return onApprove();case 4:setRequestedApproval(false);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);})),[onApprove]);var renderApprovalOrStakeButton=function renderApprovalOrStakeButton(){return removed||isApproved?/*#__PURE__*/_jsx(StakeAction,{stakedBalance:stakedBalance,tokenBalance:tokenBalance,tokenName:lpName,pid:pid,depositFeeBP:depositFeeBP}):/*#__PURE__*/_jsx(Button,{style:{width:'100%'},mt:\"8px\",disabled:requestedApproval,onClick:handleApprove,children:TranslateString(999,'Approve Contract')});};return/*#__PURE__*/_jsxs(Action,{children:[/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"secondary\",fontSize:\"12px\",pr:\"3px\",children:\"BLZD\"}),/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"textSubtle\",fontSize:\"12px\",children:TranslateString(999,'Earned')})]}),/*#__PURE__*/_jsx(HarvestAction,{earnings:earnings,pid:pid}),/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"secondary\",fontSize:\"12px\",pr:\"3px\",children:lpName}),/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"textSubtle\",fontSize:\"12px\",children:TranslateString(999,'Staked')})]}),!account?/*#__PURE__*/_jsx(UnlockButton,{mt:\"8px\"}):renderApprovalOrStakeButton()]});};export default CardActions;","map":{"version":3,"sources":["C:/Users/frkul/Documents/smurf.money/blzd-frontend/src/views/Farms/components/FarmCard/CardActionsContainer.tsx"],"names":["React","useMemo","useState","useCallback","styled","getContract","Button","Flex","Text","useFarmFromPid","useFarmUser","useI18n","UnlockButton","useApprove","StakeAction","HarvestAction","Action","div","CardActions","farm","ethereum","account","removed","TranslateString","requestedApproval","setRequestedApproval","pid","lpAddresses","tokenAddresses","isTokenOnly","depositFeeBP","allowance","tokenBalance","stakedBalance","earnings","lpAddress","process","env","REACT_APP_CHAIN_ID","tokenAddress","lpName","lpSymbol","toUpperCase","isApproved","isGreaterThan","lpContract","onApprove","handleApprove","console","error","renderApprovalOrStakeButton","width"],"mappings":"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","sourcesContent":["import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@blzd-dev/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  removed: boolean\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account, removed }) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum as provider, tokenAddress)\r\n    }\r\n    return getContract(ethereum as provider, lpAddress)\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return removed || isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n      />\r\n    ) : (\r\n      <Button style={{ width: '100%' }} mt=\"8px\" disabled={requestedApproval} onClick={handleApprove}>\r\n        {TranslateString(999, 'Approve Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          BLZD\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(999, 'Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {lpName}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(999, 'Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <UnlockButton mt=\"8px\" /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n"]},"metadata":{},"sourceType":"module"}