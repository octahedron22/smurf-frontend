{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dokumente\\\\GitHub\\\\smurf\\\\SMURF-frontend\\\\src\\\\views\\\\Home\\\\components\\\\SmurfStats.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, CardBody, Heading, Text } from '@blzd-dev/uikit';\nimport BigNumber from 'bignumber.js/bignumber';\nimport styled from 'styled-components';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance';\nimport useI18n from 'hooks/useI18n';\nimport { getCakeAddress } from 'utils/addressHelpers';\nimport CardValue from './CardValue';\nimport { useFarms, usePriceSmurfBusd } from '../../../state/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledSmurfStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`;\n_c = StyledSmurfStats;\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\n_c2 = Row;\n\nconst SmurfStats = () => {\n  _s();\n\n  const TranslateString = useI18n();\n  const totalSupply = useTotalSupply();\n  const burnedBalance = useBurnedBalance(getCakeAddress());\n  const farms = useFarms();\n  const SmurfPrice = usePriceSmurfBusd();\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0);\n  const smurfSupply = getBalanceNumber(circSupply);\n  const marketCap = SmurfPrice.times(circSupply);\n  let smurfPerBlock = 0;\n\n  if (farms && farms[0] && farms[0].smurfPerBlock) {\n    smurfPerBlock = new BigNumber(farms[0].smurfPerBlock).div(new BigNumber(10).pow(18)).toNumber();\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledSmurfStats, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"xl\",\n        mb: \"24px\",\n        children: TranslateString(534, 'SMURF Stats')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: TranslateString(536, 'Total SMURF Supply')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), smurfSupply && /*#__PURE__*/_jsxDEV(CardValue, {\n          fontSize: \"14px\",\n          value: smurfSupply,\n          decimals: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: TranslateString(999, 'Market Cap')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardValue, {\n          fontSize: \"14px\",\n          value: getBalanceNumber(marketCap),\n          decimals: 0,\n          prefix: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: TranslateString(538, 'Total SMURF Burned')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardValue, {\n          fontSize: \"14px\",\n          value: getBalanceNumber(burnedBalance),\n          decimals: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: TranslateString(540, 'New SMURF/Block')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: \"14px\",\n          children: smurfPerBlock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SmurfStats, \"l5aQ60AMEXxZFPLCvs87/Ujecpc=\", false, function () {\n  return [useI18n, useTotalSupply, useBurnedBalance, useFarms, usePriceSmurfBusd];\n});\n\n_c3 = SmurfStats;\nexport default SmurfStats;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledSmurfStats\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"SmurfStats\");","map":{"version":3,"sources":["C:/Dokumente/GitHub/smurf/SMURF-frontend/src/views/Home/components/SmurfStats.tsx"],"names":["React","Card","CardBody","Heading","Text","BigNumber","styled","getBalanceNumber","useTotalSupply","useBurnedBalance","useI18n","getCakeAddress","CardValue","useFarms","usePriceSmurfBusd","StyledSmurfStats","Row","div","SmurfStats","TranslateString","totalSupply","burnedBalance","farms","SmurfPrice","circSupply","minus","smurfSupply","marketCap","times","smurfPerBlock","pow","toNumber"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Card, CardBody, Heading, Text } from '@blzd-dev/uikit'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport CardValue from './CardValue'\r\nimport { useFarms, usePriceSmurfBusd } from '../../../state/hooks'\r\n\r\nconst StyledSmurfStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst SmurfStats = () => {\r\n  const TranslateString = useI18n()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = useBurnedBalance(getCakeAddress())\r\n  const farms = useFarms()\r\n  const SmurfPrice = usePriceSmurfBusd()\r\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0)\r\n  const smurfSupply = getBalanceNumber(circSupply)\r\n  const marketCap = SmurfPrice.times(circSupply)\r\n\r\n  let smurfPerBlock = 0\r\n  if (farms && farms[0] && farms[0].smurfPerBlock) {\r\n    smurfPerBlock = new BigNumber(farms[0].smurfPerBlock).div(new BigNumber(10).pow(18)).toNumber()\r\n  }\r\n\r\n  return (\r\n    <StyledSmurfStats>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(534, 'SMURF Stats')}\r\n        </Heading>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(536, 'Total SMURF Supply')}</Text>\r\n          {smurfSupply && <CardValue fontSize=\"14px\" value={smurfSupply} decimals={0} />}\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(999, 'Market Cap')}</Text>\r\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(marketCap)} decimals={0} prefix=\"$\" />\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(538, 'Total SMURF Burned')}</Text>\r\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(burnedBalance)} decimals={0} />\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(540, 'New SMURF/Block')}</Text>\r\n          <Text bold fontSize=\"14px\">\r\n            {smurfPerBlock}\r\n          </Text>\r\n        </Row>\r\n      </CardBody>\r\n    </StyledSmurfStats>\r\n  )\r\n}\r\n\r\nexport default SmurfStats\r\n"]},"metadata":{},"sourceType":"module"}