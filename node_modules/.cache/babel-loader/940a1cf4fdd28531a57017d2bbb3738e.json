{"ast":null,"code":"import React from'react';import{Text}from'@blzd-dev/uikit';import{useWallet}from'@binance-chain/bsc-use-wallet';import useTokenBalance from'hooks/useTokenBalance';import useI18n from'hooks/useI18n';import{getCakeAddress}from'utils/addressHelpers';import{getBalanceNumber}from'utils/formatBalance';import CardValue from'./CardValue';import{jsx as _jsx}from\"react/jsx-runtime\";var BlzdWalletBalance=function BlzdWalletBalance(){var TranslateString=useI18n();var cakeBalance=useTokenBalance(getCakeAddress());var _useWallet=useWallet(),account=_useWallet.account;if(!account){return/*#__PURE__*/_jsx(Text,{color:\"textDisabled\",style:{lineHeight:'36px'},children:TranslateString(298,'Locked')});}return/*#__PURE__*/_jsx(CardValue,{value:getBalanceNumber(cakeBalance),fontSize:\"36px\"});};export default BlzdWalletBalance;","map":{"version":3,"sources":["C:/Users/frkul/Documents/smurf.money/blzd-frontend/src/views/XBLZD/components/BlzdWalletBalance.tsx"],"names":["React","Text","useWallet","useTokenBalance","useI18n","getCakeAddress","getBalanceNumber","CardValue","BlzdWalletBalance","TranslateString","cakeBalance","account","lineHeight"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,OAASC,SAAT,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,eAAP,KAA4B,uBAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAASC,cAAT,KAA+B,sBAA/B,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,2CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,GAAMC,CAAAA,eAAe,CAAGL,OAAO,EAA/B,CACA,GAAMM,CAAAA,WAAW,CAAGP,eAAe,CAACE,cAAc,EAAf,CAAnC,CAF8B,eAGVH,SAAS,EAHC,CAGtBS,OAHsB,YAGtBA,OAHsB,CAK9B,GAAI,CAACA,OAAL,CAAc,CACZ,mBACE,KAAC,IAAD,EAAM,KAAK,CAAC,cAAZ,CAA2B,KAAK,CAAE,CAAEC,UAAU,CAAE,MAAd,CAAlC,UACGH,eAAe,CAAC,GAAD,CAAM,QAAN,CADlB,EADF,CAKD,CAED,mBAAO,KAAC,SAAD,EAAW,KAAK,CAAEH,gBAAgB,CAACI,WAAD,CAAlC,CAAiD,QAAQ,CAAC,MAA1D,EAAP,CACD,CAdD,CAgBA,cAAeF,CAAAA,iBAAf","sourcesContent":["import React from 'react'\r\nimport { Text } from '@blzd-dev/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport CardValue from './CardValue'\r\n\r\nconst BlzdWalletBalance = () => {\r\n  const TranslateString = useI18n()\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '36px' }}>\r\n        {TranslateString(298, 'Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return <CardValue value={getBalanceNumber(cakeBalance)} fontSize=\"36px\" />\r\n}\r\n\r\nexport default BlzdWalletBalance\r\n"]},"metadata":{},"sourceType":"module"}