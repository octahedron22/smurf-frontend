{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$(),\n    _s13 = $RefreshSig$(),\n    _s14 = $RefreshSig$();\n\nimport BigNumber from 'bignumber.js';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useRefresh from 'hooks/useRefresh';\nimport { getWeb3NoAccount } from 'utils/web3';\nimport { fetchFarmsPublicDataAsync, fetchPoolsUserDataAsync, fetchPoolsPublicDataAsync, setBlock } from './actions';\nimport { QuoteToken } from '../config/constants/types';\nimport { fetchPrices } from './prices';\nconst ZERO = new BigNumber(0);\nexport const useFetchPublicData = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync());\n    dispatch(fetchPoolsPublicDataAsync());\n  }, [dispatch, slowRefresh]);\n  useEffect(() => {\n    const web3 = getWeb3NoAccount();\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber();\n      dispatch(setBlock(blockNumber));\n    }, 6000);\n    return () => clearInterval(interval);\n  }, [dispatch]);\n}; // Farms\n\n_s(useFetchPublicData, \"wuS4Y8EKVAeAtW/NPPlvO8B968o=\", false, function () {\n  return [useDispatch, useRefresh];\n});\n\nexport const useFarms = () => {\n  _s2();\n\n  const farms = useSelector(state => state.farms.data);\n  return farms;\n};\n\n_s2(useFarms, \"40tjDYBLbzKzCIdd0cwm+UIfe9E=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmFromPid = pid => {\n  _s3();\n\n  const farm = useSelector(state => state.farms.data.find(f => f.pid === pid));\n  return farm;\n};\n\n_s3(useFarmFromPid, \"TOdL9+Oz8AEj+wmjEA7Olv/caxU=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmFromSymbol = lpSymbol => {\n  _s4();\n\n  const farm = useSelector(state => state.farms.data.find(f => f.lpSymbol === lpSymbol));\n  return farm;\n};\n\n_s4(useFarmFromSymbol, \"TOdL9+Oz8AEj+wmjEA7Olv/caxU=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmUser = pid => {\n  _s5();\n\n  const farm = useFarmFromPid(pid);\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0)\n  };\n}; // Pools\n\n_s5(useFarmUser, \"kxbBDHm0i5EJweIp+RPzOgw8PRU=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const usePools = account => {\n  _s6();\n\n  const {\n    fastRefresh\n  } = useRefresh();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account));\n    }\n  }, [account, dispatch, fastRefresh]);\n  const pools = useSelector(state => state.pools.data);\n  return pools;\n};\n\n_s6(usePools, \"WIyMD4ufrhPkRVRaHSFmHSaimvo=\", false, function () {\n  return [useRefresh, useDispatch, useSelector];\n});\n\nexport const usePoolFromPid = sousId => {\n  _s7();\n\n  const pool = useSelector(state => state.pools.data.find(p => p.sousId === sousId));\n  return pool;\n}; // Prices\n\n_s7(usePoolFromPid, \"NElEvYvoNsaNFrfsmEnHfa4jRII=\", false, function () {\n  return [useSelector];\n});\n\nexport const usePriceBnbBusd = () => {\n  _s8();\n\n  const pid = 3; // BNB-BUSD LP\n\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n};\n\n_s8(usePriceBnbBusd, \"kxbBDHm0i5EJweIp+RPzOgw8PRU=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const usePriceBlzdBusd = () => {\n  _s9();\n\n  const pid = 1; // BLZD-BUSD LP\n\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n};\n\n_s9(usePriceBlzdBusd, \"kxbBDHm0i5EJweIp+RPzOgw8PRU=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const useTotalValue = () => {\n  _s10();\n\n  const farms = useFarms();\n  const bnbPrice = usePriceBnbBusd();\n  const blzdPrice = usePriceBlzdBusd();\n  let value = new BigNumber(0);\n\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i];\n\n    if (farm.lpTotalInQuoteToken) {\n      let val;\n\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = bnbPrice.times(farm.lpTotalInQuoteToken);\n      } else if (farm.quoteTokenSymbol === QuoteToken.BLZD) {\n        val = blzdPrice.times(farm.lpTotalInQuoteToken);\n      } else {\n        val = farm.lpTotalInQuoteToken;\n      }\n\n      value = value.plus(val);\n    }\n  }\n\n  return value;\n}; // Prices\n\n_s10(useTotalValue, \"BnZp//cs9xlvGPwfo4ZX0Q5dx0s=\", false, function () {\n  return [useFarms, usePriceBnbBusd, usePriceBlzdBusd];\n});\n\nexport const useFetchPriceList = () => {\n  _s11();\n\n  const {\n    slowRefresh\n  } = useRefresh();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchPrices());\n  }, [dispatch, slowRefresh]);\n};\n\n_s11(useFetchPriceList, \"ODIO3TDCpvQIMp0pAFTOj2x4j3w=\", false, function () {\n  return [useRefresh, useDispatch];\n});\n\nexport const useGetApiPrices = () => {\n  _s12();\n\n  const prices = useSelector(state => state.prices.data);\n  return prices;\n};\n\n_s12(useGetApiPrices, \"FfFSnB6kLWyrPuGGju2q0Rwh7JY=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetApiPrice = token => {\n  _s13();\n\n  const prices = useGetApiPrices();\n  let tokenSymbol = token.toLowerCase();\n\n  if (!prices) {\n    return null;\n  }\n\n  if (tokenSymbol === 'bnb') tokenSymbol = 'wbnb';\n  if (tokenSymbol === 'btc') tokenSymbol = 'btcb';\n  return prices[tokenSymbol];\n}; // Block\n\n_s13(useGetApiPrice, \"4RSofgi5q8qs6bn/kfSx+OTTFNc=\", false, function () {\n  return [useGetApiPrices];\n});\n\nexport const useBlock = () => {\n  _s14();\n\n  return useSelector(state => state.block);\n};\n\n_s14(useBlock, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["C:/Users/frkul/Documents/smurf.money/SMURF-frontend/src/state/hooks.ts"],"names":["BigNumber","useEffect","useSelector","useDispatch","useRefresh","getWeb3NoAccount","fetchFarmsPublicDataAsync","fetchPoolsUserDataAsync","fetchPoolsPublicDataAsync","setBlock","QuoteToken","fetchPrices","ZERO","useFetchPublicData","dispatch","slowRefresh","web3","interval","setInterval","blockNumber","eth","getBlockNumber","clearInterval","useFarms","farms","state","data","useFarmFromPid","pid","farm","find","f","useFarmFromSymbol","lpSymbol","useFarmUser","allowance","userData","tokenBalance","stakedBalance","earnings","usePools","account","fastRefresh","pools","usePoolFromPid","sousId","pool","p","usePriceBnbBusd","tokenPriceVsQuote","usePriceBlzdBusd","useTotalValue","bnbPrice","blzdPrice","value","i","length","lpTotalInQuoteToken","val","quoteTokenSymbol","BNB","times","BLZD","plus","useFetchPriceList","useGetApiPrices","prices","useGetApiPrice","token","tokenSymbol","toLowerCase","useBlock","block"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport { fetchFarmsPublicDataAsync, fetchPoolsUserDataAsync, fetchPoolsPublicDataAsync, setBlock } from './actions'\r\nimport { State, Farm, Pool, Block, PriceState } from './types'\r\nimport { QuoteToken } from '../config/constants/types'\r\nimport { fetchPrices } from './prices'\r\n\r\nconst ZERO = new BigNumber(0)\r\n\r\nexport const useFetchPublicData = () => {\r\n  const dispatch = useDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync())\r\n    dispatch(fetchPoolsPublicDataAsync())\r\n  }, [dispatch, slowRefresh])\r\n\r\n  useEffect(() => {\r\n    const web3 = getWeb3NoAccount()\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      dispatch(setBlock(blockNumber))\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [dispatch])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): Farm[] => {\r\n  const farms = useSelector((state: State) => state.farms.data)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n  \r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\r\n  }\r\n}\r\n\r\n// Pools\r\n\r\nexport const usePools = (account): Pool[] => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const usePoolFromPid = (sousId): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return pool\r\n}\r\n\r\n// Prices\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const pid = 3 // BNB-BUSD LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceBlzdBusd = (): BigNumber => {\r\n  const pid = 1 // BLZD-BUSD LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const useTotalValue = (): BigNumber => {\r\n  const farms = useFarms()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const blzdPrice = usePriceBlzdBusd()\r\n  let value = new BigNumber(0)\r\n  for (let i = 0; i < farms.length; i++) {\r\n    const farm = farms[i]\r\n    if (farm.lpTotalInQuoteToken) {\r\n      let val\r\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\r\n      } else if (farm.quoteTokenSymbol === QuoteToken.BLZD) {\r\n        val = blzdPrice.times(farm.lpTotalInQuoteToken)\r\n      } else {\r\n        val = farm.lpTotalInQuoteToken\r\n      }\r\n      value = value.plus(val)\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\n// Prices\r\nexport const useFetchPriceList = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPrices())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\nexport const useGetApiPrices = () => {\r\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\r\n  return prices\r\n}\r\n\r\nexport const useGetApiPrice = (token: string) => {\r\n  const prices = useGetApiPrices()\r\n  let tokenSymbol = token.toLowerCase()\r\n\r\n  if (!prices) {\r\n    return null\r\n  }\r\n\r\n  if (tokenSymbol === 'bnb') tokenSymbol = 'wbnb'\r\n  if (tokenSymbol === 'btc') tokenSymbol = 'btcb'\r\n\r\n  return prices[tokenSymbol]\r\n}\r\n\r\n// Block\r\nexport const useBlock = (): Block => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}