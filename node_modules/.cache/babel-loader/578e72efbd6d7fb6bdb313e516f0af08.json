{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null\n}; // Thunks\n\nexport const fetchPrices = createAsyncThunk('prices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.com/api/v1/price');\n  const data = await response.json(); // Return normalized token names\n\n  return {\n    update_at: data.update_at,\n    prices: Object.keys(data.prices).reduce((accum, token) => {\n      return { ...accum,\n        [token.toLowerCase()]: data.prices[token]\n      };\n    }, {})\n  };\n});\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchPrices.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchPrices.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.lastUpdated = action.payload.update_at;\n      state.data = action.payload.prices;\n    });\n  }\n});\nexport default pricesSlice.reducer;","map":{"version":3,"sources":["C:/Dokumente/GitHub/smurf/SMURF-frontend/src/state/prices/index.ts"],"names":["createAsyncThunk","createSlice","initialState","isLoading","lastUpdated","data","fetchPrices","response","fetch","json","update_at","prices","Object","keys","reduce","accum","token","toLowerCase","pricesSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","reducer"],"mappings":"AAAA;AACA,SAASA,gBAAT,EAA2BC,WAA3B,QAA6D,kBAA7D;AAGA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,SAAS,EAAE,KADoB;AAE/BC,EAAAA,WAAW,EAAE,IAFkB;AAG/BC,EAAAA,IAAI,EAAE;AAHyB,CAAjC,C,CAMA;;AACA,OAAO,MAAMC,WAAW,GAAGN,gBAAgB,CAAmB,cAAnB,EAAmC,YAAY;AACxF,QAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAAD,CAA5B;AACA,QAAMH,IAAI,GAAI,MAAME,QAAQ,CAACE,IAAT,EAApB,CAFwF,CAIxF;;AACA,SAAO;AACLC,IAAAA,SAAS,EAAEL,IAAI,CAACK,SADX;AAELC,IAAAA,MAAM,EAAEC,MAAM,CAACC,IAAP,CAAYR,IAAI,CAACM,MAAjB,EAAyBG,MAAzB,CAAgC,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACxD,aAAO,EACL,GAAGD,KADE;AAEL,SAACC,KAAK,CAACC,WAAN,EAAD,GAAuBZ,IAAI,CAACM,MAAL,CAAYK,KAAZ;AAFlB,OAAP;AAID,KALO,EAKL,EALK;AAFH,GAAP;AASD,CAd0C,CAApC;AAgBP,OAAO,MAAME,WAAW,GAAGjB,WAAW,CAAC;AACrCkB,EAAAA,IAAI,EAAE,QAD+B;AAErCjB,EAAAA,YAFqC;AAGrCkB,EAAAA,QAAQ,EAAE,EAH2B;AAIrCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBjB,WAAW,CAACkB,OAA5B,EAAsCC,KAAD,IAAW;AAC9CA,MAAAA,KAAK,CAACtB,SAAN,GAAkB,IAAlB;AACD,KAFD;AAGAmB,IAAAA,OAAO,CAACC,OAAR,CAAgBjB,WAAW,CAACoB,SAA5B,EAAuC,CAACD,KAAD,EAAQE,MAAR,KAAoD;AACzFF,MAAAA,KAAK,CAACtB,SAAN,GAAkB,KAAlB;AACAsB,MAAAA,KAAK,CAACrB,WAAN,GAAoBuB,MAAM,CAACC,OAAP,CAAelB,SAAnC;AACAe,MAAAA,KAAK,CAACpB,IAAN,GAAasB,MAAM,CAACC,OAAP,CAAejB,MAA5B;AACD,KAJD;AAKD;AAboC,CAAD,CAA/B;AAgBP,eAAeO,WAAW,CAACW,OAA3B","sourcesContent":["/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { PriceApiResponse, PriceState } from 'state/types'\r\n\r\nconst initialState: PriceState = {\r\n  isLoading: false,\r\n  lastUpdated: null,\r\n  data: null,\r\n}\r\n\r\n// Thunks\r\nexport const fetchPrices = createAsyncThunk<PriceApiResponse>('prices/fetch', async () => {\r\n  const response = await fetch('https://api.pancakeswap.com/api/v1/price')\r\n  const data = (await response.json()) as PriceApiResponse\r\n\r\n  // Return normalized token names\r\n  return {\r\n    update_at: data.update_at,\r\n    prices: Object.keys(data.prices).reduce((accum, token) => {\r\n      return {\r\n        ...accum,\r\n        [token.toLowerCase()]: data.prices[token],\r\n      }\r\n    }, {}),\r\n  }\r\n})\r\n\r\nexport const pricesSlice = createSlice({\r\n  name: 'prices',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPrices.pending, (state) => {\r\n      state.isLoading = true\r\n    })\r\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiResponse>) => {\r\n      state.isLoading = false\r\n      state.lastUpdated = action.payload.update_at\r\n      state.data = action.payload.prices\r\n    })\r\n  },\r\n})\r\n\r\nexport default pricesSlice.reducer\r\n"]},"metadata":{},"sourceType":"module"}