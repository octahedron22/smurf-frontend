{"ast":null,"code":"import addresses from 'config/constants/contracts';\nconst chainId = process.env.REACT_APP_CHAIN_ID;\nexport const getAddress = address => {\n  const mainNetChainId = 56;\n  return address[chainId] ? address[chainId] : address[mainNetChainId];\n};\nexport const getxBlzdAddress = () => {\n  return addresses.xblzd[chainId];\n};\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId];\n};\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId];\n};\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId];\n};\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId];\n};\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId];\n};\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId];\n};","map":{"version":3,"sources":["C:/Dokumente/GitHub/smurf/SMURF-frontend/src/utils/addressHelpers.ts"],"names":["addresses","chainId","process","env","REACT_APP_CHAIN_ID","getAddress","address","mainNetChainId","getxBlzdAddress","xblzd","getCakeAddress","cake","getMasterChefAddress","masterChef","getMulticallAddress","mulltiCall","getWbnbAddress","wbnb","getLotteryAddress","lottery","getLotteryTicketAddress","lotteryNFT"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AAGA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA5B;AAEA,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAA8B;AACtD,QAAMC,cAAc,GAAG,EAAvB;AACA,SAAOD,OAAO,CAACL,OAAD,CAAP,GAAmBK,OAAO,CAACL,OAAD,CAA1B,GAAsCK,OAAO,CAACC,cAAD,CAApD;AACD,CAHM;AAKP,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,SAAOR,SAAS,CAACS,KAAV,CAAgBR,OAAhB,CAAP;AACD,CAFM;AAIP,OAAO,MAAMS,cAAc,GAAG,MAAM;AAClC,SAAOV,SAAS,CAACW,IAAV,CAAeV,OAAf,CAAP;AACD,CAFM;AAGP,OAAO,MAAMW,oBAAoB,GAAG,MAAM;AACxC,SAAOZ,SAAS,CAACa,UAAV,CAAqBZ,OAArB,CAAP;AACD,CAFM;AAGP,OAAO,MAAMa,mBAAmB,GAAG,MAAM;AACvC,SAAOd,SAAS,CAACe,UAAV,CAAqBd,OAArB,CAAP;AACD,CAFM;AAGP,OAAO,MAAMe,cAAc,GAAG,MAAM;AAClC,SAAOhB,SAAS,CAACiB,IAAV,CAAehB,OAAf,CAAP;AACD,CAFM;AAGP,OAAO,MAAMiB,iBAAiB,GAAG,MAAM;AACrC,SAAOlB,SAAS,CAACmB,OAAV,CAAkBlB,OAAlB,CAAP;AACD,CAFM;AAGP,OAAO,MAAMmB,uBAAuB,GAAG,MAAM;AAC3C,SAAOpB,SAAS,CAACqB,UAAV,CAAqBpB,OAArB,CAAP;AACD,CAFM","sourcesContent":["import addresses from 'config/constants/contracts'\r\nimport { Address } from 'config/constants/types'\r\n\r\nconst chainId = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const getAddress = (address: Address): string => {\r\n  const mainNetChainId = 56\r\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\r\n}\r\n\r\nexport const getxBlzdAddress = () => {\r\n  return addresses.xblzd[chainId]\r\n}\r\n\r\nexport const getCakeAddress = () => {\r\n  return addresses.cake[chainId]\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return addresses.masterChef[chainId]\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return addresses.mulltiCall[chainId]\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return addresses.wbnb[chainId]\r\n}\r\nexport const getLotteryAddress = () => {\r\n  return addresses.lottery[chainId]\r\n}\r\nexport const getLotteryTicketAddress = () => {\r\n  return addresses.lotteryNFT[chainId]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}