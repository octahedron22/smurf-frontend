{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\smurf.money\\\\blzd-frontend\\\\src\\\\views\\\\Pools\\\\components\\\\PoolCard.tsx\",\n    _s = $RefreshSig$();\n\nimport BigNumber from 'bignumber.js';\nimport React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport { Button, IconButton, useModal, AddIcon, Image } from '@blzd-dev/uikit';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport UnlockButton from 'components/UnlockButton';\nimport Label from 'components/Label';\nimport { useERC20 } from 'hooks/useContract';\nimport { useSousApprove } from 'hooks/useApprove';\nimport useI18n from 'hooks/useI18n';\nimport { useSousStake } from 'hooks/useStake';\nimport { useSousUnstake } from 'hooks/useUnstake';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { getPoolApy } from 'utils/apy';\nimport { getAddress } from 'utils/addressHelpers';\nimport { useSousHarvest } from 'hooks/useHarvest';\nimport Balance from 'components/Balance';\nimport { PoolCategory } from 'config/constants/types';\nimport tokens from 'config/constants/tokens';\nimport { useGetApiPrice } from 'state/hooks';\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport CompoundModal from './CompoundModal';\nimport CardTitle from './CardTitle';\nimport Card from './Card';\nimport OldSyrupTitle from './OldSyrupTitle';\nimport HarvestButton from './HarvestButton';\nimport CardFooter from './CardFooter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PoolCard = ({\n  pool\n}) => {\n  _s();\n\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    harvest,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit\n  } = pool; // Pools using native BNB behave differently than pools using a token\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE;\n  const TranslateString = useI18n();\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '');\n  const {\n    account\n  } = useWallet();\n  const {\n    onApprove\n  } = useSousApprove(stakingTokenContract, sousId);\n  const {\n    onStake\n  } = useSousStake(sousId, isBnbPool);\n  const {\n    onUnstake\n  } = useSousUnstake(sousId);\n  const {\n    onReward\n  } = useSousHarvest(sousId, isBnbPool); // APY\n\n  const rewardTokenPrice = useGetApiPrice(earningToken.symbol);\n  const stakingTokenPrice = useGetApiPrice(stakingToken.symbol);\n  const apy = getPoolApy(stakingTokenPrice, rewardTokenPrice, getBalanceNumber(pool.totalStaked, stakingToken.decimals), parseFloat(pool.tokenPerBlock));\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const [pendingTx, setPendingTx] = useState(false);\n  const allowance = new BigNumber((userData === null || userData === void 0 ? void 0 : userData.allowance) || 0);\n  const stakingTokenBalance = new BigNumber((userData === null || userData === void 0 ? void 0 : userData.stakingTokenBalance) || 0);\n  const stakedBalance = new BigNumber((userData === null || userData === void 0 ? void 0 : userData.stakedBalance) || 0);\n  const earnings = new BigNumber((userData === null || userData === void 0 ? void 0 : userData.pendingReward) || 0);\n  const isOldSyrup = stakingToken.symbol === tokens.syrup.symbol;\n  const accountHasStakedBalance = (stakedBalance === null || stakedBalance === void 0 ? void 0 : stakedBalance.toNumber()) > 0;\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool;\n  const isCardActive = isFinished && accountHasStakedBalance;\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(earningToken.decimals));\n  const [onPresentDeposit] = useModal( /*#__PURE__*/_jsxDEV(DepositModal, {\n    max: stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance,\n    onConfirm: onStake,\n    tokenName: stakingLimit ? `${stakingToken.symbol} (${stakingLimit} max)` : stakingToken.symbol // stakingTokenDecimals={stakingToken.decimals}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this));\n  const [onPresentCompound] = useModal( /*#__PURE__*/_jsxDEV(CompoundModal, {\n    earnings: earnings,\n    onConfirm: onStake,\n    tokenName: stakingToken.symbol\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this));\n  const poolImage = `${pool.earningToken.symbol}-${pool.stakingToken.symbol}.png`.toLocaleLowerCase();\n  const [onPresentWithdraw] = useModal( /*#__PURE__*/_jsxDEV(WithdrawModal, {\n    max: stakedBalance,\n    onConfirm: onUnstake,\n    tokenName: stakingToken.symbol // stakingTokenDecimals={stakingToken.decimals}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this));\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      const txHash = await onApprove(); // user rejected tx or didn't go thru\n\n      if (!txHash) {\n        setRequestedApproval(false);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onApprove, setRequestedApproval]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    isActive: isCardActive,\n    isFinished: isFinished && sousId !== 0,\n    children: [isFinished && sousId !== 0 && /*#__PURE__*/_jsxDEV(PoolFinishedSash, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '24px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        isFinished: isFinished && sousId !== 0,\n        children: [isOldSyrup && '[OLD]', \" \", earningToken.symbol, \" \", TranslateString(348, 'Pool')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '8px',\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: `https://raw.githubusercontent.com/blzd-dev/blzd-frontend/master/public/images/pools/${poolImage}`,\n            alt: earningToken.symbol,\n            width: 64,\n            height: 64\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), account && harvest && !isOldSyrup && /*#__PURE__*/_jsxDEV(HarvestButton, {\n          disabled: !earnings.toNumber() || pendingTx,\n          text: pendingTx ? 'Collecting' : 'Harvest',\n          onClick: async () => {\n            setPendingTx(true);\n            await onReward();\n            setPendingTx(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), !isOldSyrup ? /*#__PURE__*/_jsxDEV(BalanceAndCompound, {\n        children: [/*#__PURE__*/_jsxDEV(Balance, {\n          value: getBalanceNumber(earnings, earningToken.decimals),\n          isDisabled: isFinished\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), sousId === 0 && account && harvest && /*#__PURE__*/_jsxDEV(HarvestButton, {\n          disabled: !earnings.toNumber() || pendingTx,\n          text: pendingTx ? TranslateString(999, 'Compounding') : TranslateString(704, 'Compound'),\n          onClick: onPresentCompound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(OldSyrupTitle, {\n        hasBalance: accountHasStakedBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        isFinished: isFinished && sousId !== 0,\n        text: TranslateString(330, `${earningToken.symbol} earned`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledCardActions, {\n        children: [!account && /*#__PURE__*/_jsxDEV(UnlockButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 24\n        }, this), account && (needsApproval && !isOldSyrup ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disabled: isFinished || requestedApproval,\n            onClick: handleApprove,\n            width: \"100%\",\n            children: `Approve ${stakingToken.symbol}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: stakedBalance.eq(new BigNumber(0)) || pendingTx,\n            style: {\n              width: '80%'\n            },\n            onClick: isOldSyrup ? async () => {\n              setPendingTx(true);\n              await onUnstake('0');\n              setPendingTx(false);\n            } : onPresentWithdraw,\n            children: `Unstake ${stakingToken.symbol}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(StyledActionSpacer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this), !isOldSyrup && /*#__PURE__*/_jsxDEV(IconButton, {\n            style: {\n              width: '20%'\n            },\n            disabled: isFinished && sousId !== 0,\n            onClick: onPresentDeposit,\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledDetails, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [TranslateString(736, 'APR'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), isFinished || isOldSyrup || !apy ? '-' : /*#__PURE__*/_jsxDEV(Balance, {\n          fontSize: \"14px\",\n          isDisabled: isFinished,\n          value: apy,\n          decimals: 2,\n          unit: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledDetails, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [TranslateString(384, 'Your Stake'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Balance, {\n          fontSize: \"14px\",\n          isDisabled: isFinished,\n          value: getBalanceNumber(stakedBalance, stakingToken.decimals)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n      projectLink: earningToken.projectLink,\n      decimals: stakingToken.decimals,\n      totalStaked: totalStaked,\n      startBlock: startBlock,\n      endBlock: endBlock,\n      isFinished: isFinished,\n      poolCategory: poolCategory,\n      tokenName: earningToken.symbol,\n      tokenAddress: earningToken.address ? getAddress(earningToken.address) : '',\n      tokenDecimals: earningToken.decimals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PoolCard, \"3+WD9CGLlFZpDtEIvL9IIfnAJjI=\", false, function () {\n  return [useI18n, useERC20, useWallet, useSousApprove, useSousStake, useSousUnstake, useSousHarvest, useGetApiPrice, useGetApiPrice, useModal, useModal, useModal];\n});\n\n_c = PoolCard;\nconst PoolFinishedSash = styled.div`\n  background-image: url('https://raw.githubusercontent.com/blzd-dev/blzd-frontend/master/public/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`;\n_c2 = PoolFinishedSash;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`;\n_c3 = StyledCardActions;\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`;\n_c4 = BalanceAndCompound;\nconst StyledActionSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\n_c5 = StyledActionSpacer;\nconst StyledDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 14px;\n`;\n_c6 = StyledDetails;\nexport default PoolCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"PoolCard\");\n$RefreshReg$(_c2, \"PoolFinishedSash\");\n$RefreshReg$(_c3, \"StyledCardActions\");\n$RefreshReg$(_c4, \"BalanceAndCompound\");\n$RefreshReg$(_c5, \"StyledActionSpacer\");\n$RefreshReg$(_c6, \"StyledDetails\");","map":{"version":3,"sources":["C:/Users/frkul/Documents/smurf.money/blzd-frontend/src/views/Pools/components/PoolCard.tsx"],"names":["BigNumber","React","useCallback","useState","styled","Button","IconButton","useModal","AddIcon","Image","useWallet","UnlockButton","Label","useERC20","useSousApprove","useI18n","useSousStake","useSousUnstake","getBalanceNumber","getPoolApy","getAddress","useSousHarvest","Balance","PoolCategory","tokens","useGetApiPrice","DepositModal","WithdrawModal","CompoundModal","CardTitle","Card","OldSyrupTitle","HarvestButton","CardFooter","PoolCard","pool","sousId","stakingToken","earningToken","harvest","poolCategory","totalStaked","startBlock","endBlock","isFinished","userData","stakingLimit","isBnbPool","BINANCE","TranslateString","stakingTokenContract","address","account","onApprove","onStake","onUnstake","onReward","rewardTokenPrice","symbol","stakingTokenPrice","apy","decimals","parseFloat","tokenPerBlock","requestedApproval","setRequestedApproval","pendingTx","setPendingTx","allowance","stakingTokenBalance","stakedBalance","earnings","pendingReward","isOldSyrup","syrup","accountHasStakedBalance","toNumber","needsApproval","isCardActive","convertedLimit","multipliedBy","pow","onPresentDeposit","isGreaterThan","onPresentCompound","poolImage","toLocaleLowerCase","onPresentWithdraw","handleApprove","txHash","e","console","error","padding","marginBottom","display","alignItems","flex","eq","width","projectLink","PoolFinishedSash","div","StyledCardActions","BalanceAndCompound","StyledActionSpacer","props","theme","spacing","StyledDetails"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, IconButton, useModal, AddIcon, Image } from '@blzd-dev/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Label from 'components/Label'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { useSousApprove } from 'hooks/useApprove'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useSousStake } from 'hooks/useStake'\r\nimport { useSousUnstake } from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getPoolApy } from 'utils/apy'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useSousHarvest } from 'hooks/useHarvest'\r\nimport Balance from 'components/Balance'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Pool } from 'state/types'\r\nimport { useGetApiPrice } from 'state/hooks'\r\nimport DepositModal from './DepositModal'\r\nimport WithdrawModal from './WithdrawModal'\r\nimport CompoundModal from './CompoundModal'\r\nimport CardTitle from './CardTitle'\r\nimport Card from './Card'\r\nimport OldSyrupTitle from './OldSyrupTitle'\r\nimport HarvestButton from './HarvestButton'\r\nimport CardFooter from './CardFooter'\r\n\r\ninterface HarvestProps {\r\n  pool: Pool\r\n}\r\n\r\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    harvest,\r\n    poolCategory,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    isFinished,\r\n    userData,\r\n    stakingLimit,\r\n  } = pool\r\n\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const TranslateString = useI18n()\r\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\r\n  const { account } = useWallet()\r\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\r\n  const { onStake } = useSousStake(sousId, isBnbPool)\r\n  const { onUnstake } = useSousUnstake(sousId)\r\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\r\n\r\n  // APY\r\n  const rewardTokenPrice = useGetApiPrice(earningToken.symbol)\r\n  const stakingTokenPrice = useGetApiPrice(stakingToken.symbol)\r\n  const apy = getPoolApy(\r\n    stakingTokenPrice,\r\n    rewardTokenPrice,\r\n    getBalanceNumber(pool.totalStaked, stakingToken.decimals),\r\n    parseFloat(pool.tokenPerBlock),\r\n  )\r\n\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n\r\n  const allowance = new BigNumber(userData?.allowance || 0)\r\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\r\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\r\n  const earnings = new BigNumber(userData?.pendingReward || 0)\r\n\r\n  const isOldSyrup = stakingToken.symbol === tokens.syrup.symbol\r\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\r\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\r\n  const isCardActive = isFinished && accountHasStakedBalance\r\n\r\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(earningToken.decimals))\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\r\n      onConfirm={onStake}\r\n      tokenName={stakingLimit ? `${stakingToken.symbol} (${stakingLimit} max)` : stakingToken.symbol}\r\n      // stakingTokenDecimals={stakingToken.decimals}\r\n    />,\r\n  )\r\n\r\n  const [onPresentCompound] = useModal(\r\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingToken.symbol} />,\r\n  )\r\n  const poolImage = `${pool.earningToken.symbol}-${pool.stakingToken.symbol}.png`.toLocaleLowerCase()\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal\r\n      max={stakedBalance}\r\n      onConfirm={onUnstake}\r\n      tokenName={stakingToken.symbol}\r\n      // stakingTokenDecimals={stakingToken.decimals}\r\n    />,\r\n  )\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, setRequestedApproval])\r\n\r\n  return (\r\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\r\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\r\n      <div style={{ padding: '24px' }}>\r\n        <CardTitle isFinished={isFinished && sousId !== 0}>\r\n          {isOldSyrup && '[OLD]'} {earningToken.symbol} {TranslateString(348, 'Pool')}\r\n        </CardTitle>\r\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\r\n          <div style={{ flex: 1 }}>\r\n            <Image\r\n              src={`https://raw.githubusercontent.com/blzd-dev/blzd-frontend/master/public/images/pools/${poolImage}`}\r\n              alt={earningToken.symbol}\r\n              width={64}\r\n              height={64}\r\n            />\r\n          </div>\r\n          {account && harvest && !isOldSyrup && (\r\n            <HarvestButton\r\n              disabled={!earnings.toNumber() || pendingTx}\r\n              text={pendingTx ? 'Collecting' : 'Harvest'}\r\n              onClick={async () => {\r\n                setPendingTx(true)\r\n                await onReward()\r\n                setPendingTx(false)\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        {!isOldSyrup ? (\r\n          <BalanceAndCompound>\r\n            <Balance value={getBalanceNumber(earnings, earningToken.decimals)} isDisabled={isFinished} />\r\n            {sousId === 0 && account && harvest && (\r\n              <HarvestButton\r\n                disabled={!earnings.toNumber() || pendingTx}\r\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(704, 'Compound')}\r\n                onClick={onPresentCompound}\r\n              />\r\n            )}\r\n          </BalanceAndCompound>\r\n        ) : (\r\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\r\n        )}\r\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${earningToken.symbol} earned`)} />\r\n        <StyledCardActions>\r\n          {!account && <UnlockButton />}\r\n          {account &&\r\n            (needsApproval && !isOldSyrup ? (\r\n              <div style={{ flex: 1 }}>\r\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} width=\"100%\">\r\n                  {`Approve ${stakingToken.symbol}`}\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\r\n                  style={{ width: '80%' }}\r\n                  onClick={\r\n                    isOldSyrup\r\n                      ? async () => {\r\n                          setPendingTx(true)\r\n                          await onUnstake('0')\r\n                          setPendingTx(false)\r\n                        }\r\n                      : onPresentWithdraw\r\n                  }\r\n                >\r\n                  {`Unstake ${stakingToken.symbol}`}\r\n                </Button>\r\n                <StyledActionSpacer />\r\n                {!isOldSyrup && (\r\n                  <IconButton style={{ width: '20%' }} disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\r\n                    <AddIcon color=\"white\" />\r\n                  </IconButton>\r\n                )}\r\n              </>\r\n            ))}\r\n        </StyledCardActions>\r\n        <StyledDetails>\r\n          <div>{TranslateString(736, 'APR')}:</div>\r\n          {isFinished || isOldSyrup || !apy ? (\r\n            '-'\r\n          ) : (\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy} decimals={2} unit=\"%\" />\r\n          )}\r\n        </StyledDetails>\r\n        <StyledDetails>\r\n          <div>{TranslateString(384, 'Your Stake')}:</div>\r\n          <Balance\r\n            fontSize=\"14px\"\r\n            isDisabled={isFinished}\r\n            value={getBalanceNumber(stakedBalance, stakingToken.decimals)}\r\n          />\r\n        </StyledDetails>\r\n      </div>\r\n      <CardFooter\r\n        projectLink={earningToken.projectLink}\r\n        decimals={stakingToken.decimals}\r\n        totalStaked={totalStaked}\r\n        startBlock={startBlock}\r\n        endBlock={endBlock}\r\n        isFinished={isFinished}\r\n        poolCategory={poolCategory}\r\n        tokenName={earningToken.symbol}\r\n        tokenAddress={earningToken.address ? getAddress(earningToken.address) : ''}\r\n        tokenDecimals={earningToken.decimals}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst PoolFinishedSash = styled.div`\r\n  background-image: url('https://raw.githubusercontent.com/blzd-dev/blzd-frontend/master/public/images/pool-finished-sash.svg');\r\n  background-position: top right;\r\n  background-repeat: not-repeat;\r\n  height: 135px;\r\n  position: absolute;\r\n  right: -24px;\r\n  top: -24px;\r\n  width: 135px;\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 16px 0;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n`\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n`\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledDetails = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 14px;\r\n`\r\n\r\nexport default PoolCard\r\n"]},"metadata":{},"sourceType":"module"}