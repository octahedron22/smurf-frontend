{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/frkul/Documents/smurf.money/blzd-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import{Card,CardBody,Heading,Text}from'@blzd-dev/uikit';import BigNumber from'bignumber.js/bignumber';import styled from'styled-components';import{getBalanceNumber}from'utils/formatBalance';import{useTotalSupply,useBurnedBalance}from'hooks/useTokenBalance';import useI18n from'hooks/useI18n';import{getCakeAddress}from'utils/addressHelpers';import CardValue from'./CardValue';import{useFarms,usePriceBlzdBusd}from'../../../state/hooks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledBlzdStats=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  margin-right: auto;\\n\"])));var Row=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  display: flex;\\n  font-size: 14px;\\n  justify-content: space-between;\\n  margin-bottom: 8px;\\n\"])));var BlzdStats=function BlzdStats(){var TranslateString=useI18n();var totalSupply=useTotalSupply();var burnedBalance=useBurnedBalance(getCakeAddress());var farms=useFarms();var blzdPrice=usePriceBlzdBusd();var circSupply=totalSupply?totalSupply.minus(burnedBalance):new BigNumber(0);var blzdSupply=getBalanceNumber(circSupply);var marketCap=blzdPrice.times(circSupply);var blzdPerBlock=0;if(farms&&farms[0]&&farms[0].blzdPerBlock){blzdPerBlock=new BigNumber(farms[0].blzdPerBlock).div(new BigNumber(10).pow(18)).toNumber();}return/*#__PURE__*/_jsx(StyledBlzdStats,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{size:\"xl\",mb:\"24px\",children:TranslateString(534,'BLZD Stats')}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(536,'Total BLZD Supply')}),blzdSupply&&/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:blzdSupply,decimals:0})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(999,'Market Cap')}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:getBalanceNumber(marketCap),decimals:0,prefix:\"$\"})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(538,'Total BLZD Burned')}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:getBalanceNumber(burnedBalance),decimals:0})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(540,'New BLZD/block')}),/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"14px\",children:blzdPerBlock})]})]})});};export default BlzdStats;","map":{"version":3,"sources":["C:/Users/frkul/Documents/smurf.money/blzd-frontend/src/views/Home/components/BlzdStats.tsx"],"names":["React","Card","CardBody","Heading","Text","BigNumber","styled","getBalanceNumber","useTotalSupply","useBurnedBalance","useI18n","getCakeAddress","CardValue","useFarms","usePriceBlzdBusd","StyledBlzdStats","Row","div","BlzdStats","TranslateString","totalSupply","burnedBalance","farms","blzdPrice","circSupply","minus","blzdSupply","marketCap","times","blzdPerBlock","pow","toNumber"],"mappings":"8NAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,OAAzB,CAAkCC,IAAlC,KAA8C,iBAA9C,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CACA,OAASC,cAAT,CAAyBC,gBAAzB,KAAiD,uBAAjD,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAASC,cAAT,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAASC,QAAT,CAAmBC,gBAAnB,KAA2C,sBAA3C,C,wFAEA,GAAMC,CAAAA,eAAe,CAAGT,MAAM,CAACL,IAAD,CAAT,gHAArB,CAKA,GAAMe,CAAAA,GAAG,CAAGV,MAAM,CAACW,GAAV,6LAAT,CAQA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,eAAe,CAAGT,OAAO,EAA/B,CACA,GAAMU,CAAAA,WAAW,CAAGZ,cAAc,EAAlC,CACA,GAAMa,CAAAA,aAAa,CAAGZ,gBAAgB,CAACE,cAAc,EAAf,CAAtC,CACA,GAAMW,CAAAA,KAAK,CAAGT,QAAQ,EAAtB,CACA,GAAMU,CAAAA,SAAS,CAAGT,gBAAgB,EAAlC,CACA,GAAMU,CAAAA,UAAU,CAAGJ,WAAW,CAAGA,WAAW,CAACK,KAAZ,CAAkBJ,aAAlB,CAAH,CAAsC,GAAIhB,CAAAA,SAAJ,CAAc,CAAd,CAApE,CACA,GAAMqB,CAAAA,UAAU,CAAGnB,gBAAgB,CAACiB,UAAD,CAAnC,CACA,GAAMG,CAAAA,SAAS,CAAGJ,SAAS,CAACK,KAAV,CAAgBJ,UAAhB,CAAlB,CAEA,GAAIK,CAAAA,YAAY,CAAG,CAAnB,CACA,GAAIP,KAAK,EAAIA,KAAK,CAAC,CAAD,CAAd,EAAqBA,KAAK,CAAC,CAAD,CAAL,CAASO,YAAlC,CAAgD,CAC9CA,YAAY,CAAG,GAAIxB,CAAAA,SAAJ,CAAciB,KAAK,CAAC,CAAD,CAAL,CAASO,YAAvB,EAAqCZ,GAArC,CAAyC,GAAIZ,CAAAA,SAAJ,CAAc,EAAd,EAAkByB,GAAlB,CAAsB,EAAtB,CAAzC,EAAoEC,QAApE,EAAf,CACD,CAED,mBACE,KAAC,eAAD,wBACE,MAAC,QAAD,yBACE,KAAC,OAAD,EAAS,IAAI,CAAC,IAAd,CAAmB,EAAE,CAAC,MAAtB,UACGZ,eAAe,CAAC,GAAD,CAAM,YAAN,CADlB,EADF,cAIE,MAAC,GAAD,yBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,UAAuBA,eAAe,CAAC,GAAD,CAAM,mBAAN,CAAtC,EADF,CAEGO,UAAU,eAAI,KAAC,SAAD,EAAW,QAAQ,CAAC,MAApB,CAA2B,KAAK,CAAEA,UAAlC,CAA8C,QAAQ,CAAE,CAAxD,EAFjB,GAJF,cAQE,MAAC,GAAD,yBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,UAAuBP,eAAe,CAAC,GAAD,CAAM,YAAN,CAAtC,EADF,cAEE,KAAC,SAAD,EAAW,QAAQ,CAAC,MAApB,CAA2B,KAAK,CAAEZ,gBAAgB,CAACoB,SAAD,CAAlD,CAA+D,QAAQ,CAAE,CAAzE,CAA4E,MAAM,CAAC,GAAnF,EAFF,GARF,cAYE,MAAC,GAAD,yBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,UAAuBR,eAAe,CAAC,GAAD,CAAM,mBAAN,CAAtC,EADF,cAEE,KAAC,SAAD,EAAW,QAAQ,CAAC,MAApB,CAA2B,KAAK,CAAEZ,gBAAgB,CAACc,aAAD,CAAlD,CAAmE,QAAQ,CAAE,CAA7E,EAFF,GAZF,cAgBE,MAAC,GAAD,yBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,UAAuBF,eAAe,CAAC,GAAD,CAAM,gBAAN,CAAtC,EADF,cAEE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,QAAQ,CAAC,MAApB,UACGU,YADH,EAFF,GAhBF,GADF,EADF,CA2BD,CA1CD,CA4CA,cAAeX,CAAAA,SAAf","sourcesContent":["import React from 'react'\r\nimport { Card, CardBody, Heading, Text } from '@blzd-dev/uikit'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport CardValue from './CardValue'\r\nimport { useFarms, usePriceBlzdBusd } from '../../../state/hooks'\r\n\r\nconst StyledBlzdStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst BlzdStats = () => {\r\n  const TranslateString = useI18n()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = useBurnedBalance(getCakeAddress())\r\n  const farms = useFarms()\r\n  const blzdPrice = usePriceBlzdBusd()\r\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0)\r\n  const blzdSupply = getBalanceNumber(circSupply)\r\n  const marketCap = blzdPrice.times(circSupply)\r\n\r\n  let blzdPerBlock = 0\r\n  if (farms && farms[0] && farms[0].blzdPerBlock) {\r\n    blzdPerBlock = new BigNumber(farms[0].blzdPerBlock).div(new BigNumber(10).pow(18)).toNumber()\r\n  }\r\n\r\n  return (\r\n    <StyledBlzdStats>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(534, 'BLZD Stats')}\r\n        </Heading>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(536, 'Total BLZD Supply')}</Text>\r\n          {blzdSupply && <CardValue fontSize=\"14px\" value={blzdSupply} decimals={0} />}\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(999, 'Market Cap')}</Text>\r\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(marketCap)} decimals={0} prefix=\"$\" />\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(538, 'Total BLZD Burned')}</Text>\r\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(burnedBalance)} decimals={0} />\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(540, 'New BLZD/block')}</Text>\r\n          <Text bold fontSize=\"14px\">\r\n            {blzdPerBlock}\r\n          </Text>\r\n        </Row>\r\n      </CardBody>\r\n    </StyledBlzdStats>\r\n  )\r\n}\r\n\r\nexport default BlzdStats\r\n"]},"metadata":{},"sourceType":"module"}