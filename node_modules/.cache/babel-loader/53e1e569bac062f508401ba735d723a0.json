{"ast":null,"code":"import _regeneratorRuntime from\"C:/Dokumente/GitHub/smurf/SMURF-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Dokumente/GitHub/smurf/SMURF-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Dokumente/GitHub/smurf/SMURF-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Dokumente/GitHub/smurf/SMURF-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import React,{useState,useCallback}from'react';import styled from'styled-components';import{Heading,Card,CardBody,Button}from'@blzd-dev/uikit';import{useWallet}from'@binance-chain/bsc-use-wallet';import UnlockButton from'components/UnlockButton';import{useXBlzdApprove}from'hooks/useApprove';import useTokenBalance from'hooks/useTokenBalance';import{getCakeAddress}from'utils/addressHelpers';import{useXBlzdAllowance}from'hooks/useAllowance';import useExchangeXBlzd from'hooks/useExchangeXBlzd';import BlzdWalletBalance from'./BlzdWalletBalance';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledFarmStakingCard=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\"])));var Block=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-end;\\n  justify-content: center;\\n\"])));var RowBetween=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n\"])));var Divider=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  height: 1px;\\n  background: \",\";\\n  margin: 16px 0;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.textSubtle;});var CardImage=styled.img(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  margin-right: 8px;\\n\"])));var Label=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  font-size: 14px;\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.colors.textSubtle;});var Actions=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  margin-top: 24px;\\n\"])));var ExchangeBLZDCard=function ExchangeBLZDCard(){var _useWallet=useWallet(),account=_useWallet.account;var blzdBalance=useTokenBalance(getCakeAddress());var _useState=useState(false),_useState2=_slicedToArray(_useState,2),requestedApproval=_useState2[0],setRequestedApproval=_useState2[1];var allowance=useXBlzdAllowance();var onApprove=useXBlzdApprove();var isApproved=account&&allowance&&allowance.isGreaterThan(0);var _useExchangeXBlzd=useExchangeXBlzd(),onExchange=_useExchangeXBlzd.onExchange;var handleApprove=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setRequestedApproval(true);_context.next=4;return onApprove();case 4:setRequestedApproval(false);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);})),[onApprove]);var renderApprovalOrExchangeButton=function renderApprovalOrExchangeButton(){return isApproved?/*#__PURE__*/_jsx(Button,{style:{width:'100%'},mt:\"8px\",disabled:blzdBalance.isLessThanOrEqualTo(0),onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return onExchange(blzdBalance.toString());case 2:case\"end\":return _context2.stop();}}},_callee2);})),children:\"Exchange\"}):/*#__PURE__*/_jsx(Button,{style:{width:'100%'},mt:\"8px\",disabled:requestedApproval,onClick:handleApprove,children:\"Approve\"});};return/*#__PURE__*/_jsx(StyledFarmStakingCard,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{size:\"lg\",mb:\"24px\",children:\"Exchange BLZD to xBLZD\"}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(CardImage,{src:\"https://github.com/octahedron22/smurf-frontend/blob/master/public/images/smurf/2.png\",alt:\"smurf logo\",width:64,height:64}),/*#__PURE__*/_jsxs(Block,{children:[/*#__PURE__*/_jsx(Label,{children:\"BLZD in Wallet\"}),/*#__PURE__*/_jsx(BlzdWalletBalance,{})]})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(CardImage,{src:\"https://github.com/octahedron22/smurf-frontend/blob/master/public/images/smurf/2.png\",alt:\"smurf logo\",width:64,height:64}),/*#__PURE__*/_jsxs(Block,{children:[/*#__PURE__*/_jsx(Label,{children:\"xBLZD\"}),/*#__PURE__*/_jsx(BlzdWalletBalance,{})]})]}),/*#__PURE__*/_jsx(Actions,{children:account?renderApprovalOrExchangeButton():/*#__PURE__*/_jsx(UnlockButton,{fullWidth:true})})]})});};export default ExchangeBLZDCard;","map":{"version":3,"sources":["C:/Dokumente/GitHub/smurf/SMURF-frontend/src/views/XBLZD/components/ExchangeBLZDCard.tsx"],"names":["React","useState","useCallback","styled","Heading","Card","CardBody","Button","useWallet","UnlockButton","useXBlzdApprove","useTokenBalance","getCakeAddress","useXBlzdAllowance","useExchangeXBlzd","BlzdWalletBalance","StyledFarmStakingCard","Block","div","RowBetween","Divider","theme","colors","textSubtle","CardImage","img","Label","Actions","ExchangeBLZDCard","account","blzdBalance","requestedApproval","setRequestedApproval","allowance","onApprove","isApproved","isGreaterThan","onExchange","handleApprove","console","error","renderApprovalOrExchangeButton","width","isLessThanOrEqualTo","toString"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Button } from '@blzd-dev/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useXBlzdApprove } from 'hooks/useApprove'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { useXBlzdAllowance } from 'hooks/useAllowance'\r\nimport useExchangeXBlzd from 'hooks/useExchangeXBlzd'\r\nimport BlzdWalletBalance from './BlzdWalletBalance'\r\n\r\nconst StyledFarmStakingCard = styled(Card)``\r\n\r\nconst Block = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  justify-content: center;\r\n`\r\n\r\nconst RowBetween = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  height: 1px;\r\n  background: ${({ theme }) => theme.colors.textSubtle};\r\n  margin: 16px 0;\r\n`\r\n\r\nconst CardImage = styled.img`\r\n  margin-right: 8px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst ExchangeBLZDCard = () => {\r\n  const { account } = useWallet()\r\n  const blzdBalance = useTokenBalance(getCakeAddress())\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const allowance = useXBlzdAllowance()\r\n  const onApprove = useXBlzdApprove()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n  const { onExchange } = useExchangeXBlzd()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrExchangeButton = () => {\r\n    return isApproved ? (\r\n      <Button\r\n        style={{ width: '100%' }}\r\n        mt=\"8px\"\r\n        disabled={blzdBalance.isLessThanOrEqualTo(0)}\r\n        onClick={async () => {\r\n          await onExchange(blzdBalance.toString())\r\n        }}\r\n      >\r\n        Exchange\r\n      </Button>\r\n    ) : (\r\n      <Button style={{ width: '100%' }} mt=\"8px\" disabled={requestedApproval} onClick={handleApprove}>\r\n        Approve\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        <Heading size=\"lg\" mb=\"24px\">\r\n          Exchange BLZD to xBLZD\r\n        </Heading>\r\n        <RowBetween>\r\n          <CardImage\r\n            src=\"https://github.com/octahedron22/smurf-frontend/blob/master/public/images/smurf/2.png\"\r\n            alt=\"smurf logo\"\r\n            width={64}\r\n            height={64}\r\n          />\r\n          <Block>\r\n            <Label>BLZD in Wallet</Label>\r\n            <BlzdWalletBalance />\r\n          </Block>\r\n        </RowBetween>\r\n        <Divider />\r\n        <RowBetween>\r\n          <CardImage\r\n            src=\"https://github.com/octahedron22/smurf-frontend/blob/master/public/images/smurf/2.png\"\r\n            alt=\"smurf logo\"\r\n            width={64}\r\n            height={64}\r\n          />\r\n          <Block>\r\n            <Label>xBLZD</Label>\r\n            <BlzdWalletBalance />\r\n          </Block>\r\n        </RowBetween>\r\n        <Actions>{account ? renderApprovalOrExchangeButton() : <UnlockButton fullWidth />}</Actions>\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default ExchangeBLZDCard\r\n"]},"metadata":{},"sourceType":"module"}