{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frkul\\\\Documents\\\\smurf.money\\\\blzd-frontend\\\\src\\\\views\\\\XBLZD\\\\components\\\\BlzdWalletBalance.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text } from '@blzd-dev/uikit';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport useI18n from 'hooks/useI18n';\nimport { getCakeAddress } from 'utils/addressHelpers';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport CardValue from './CardValue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlzdWalletBalance = () => {\n  _s();\n\n  const TranslateString = useI18n();\n  const cakeBalance = useTokenBalance(getCakeAddress());\n  const {\n    account\n  } = useWallet();\n\n  if (!account) {\n    return /*#__PURE__*/_jsxDEV(Text, {\n      color: \"textDisabled\",\n      style: {\n        lineHeight: '36px'\n      },\n      children: TranslateString(298, 'Locked')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CardValue, {\n    value: getBalanceNumber(cakeBalance),\n    fontSize: \"36px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n\n_s(BlzdWalletBalance, \"WEUCIbpCMi+wYouAKVNBIIj7ZkA=\", false, function () {\n  return [useI18n, useTokenBalance, useWallet];\n});\n\n_c = BlzdWalletBalance;\nexport default BlzdWalletBalance;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlzdWalletBalance\");","map":{"version":3,"sources":["C:/Users/frkul/Documents/smurf.money/blzd-frontend/src/views/XBLZD/components/BlzdWalletBalance.tsx"],"names":["React","Text","useWallet","useTokenBalance","useI18n","getCakeAddress","getBalanceNumber","CardValue","BlzdWalletBalance","TranslateString","cakeBalance","account","lineHeight"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAMC,eAAe,GAAGL,OAAO,EAA/B;AACA,QAAMM,WAAW,GAAGP,eAAe,CAACE,cAAc,EAAf,CAAnC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAcT,SAAS,EAA7B;;AAEA,MAAI,CAACS,OAAL,EAAc;AACZ,wBACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,cAAZ;AAA2B,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAlC;AAAA,gBACGH,eAAe,CAAC,GAAD,EAAM,QAAN;AADlB;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBAAO,QAAC,SAAD;AAAW,IAAA,KAAK,EAAEH,gBAAgB,CAACI,WAAD,CAAlC;AAAiD,IAAA,QAAQ,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAdD;;GAAMF,iB;UACoBJ,O,EACJD,e,EACAD,S;;;KAHhBM,iB;AAgBN,eAAeA,iBAAf","sourcesContent":["import React from 'react'\r\nimport { Text } from '@blzd-dev/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport CardValue from './CardValue'\r\n\r\nconst BlzdWalletBalance = () => {\r\n  const TranslateString = useI18n()\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '36px' }}>\r\n        {TranslateString(298, 'Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return <CardValue value={getBalanceNumber(cakeBalance)} fontSize=\"36px\" />\r\n}\r\n\r\nexport default BlzdWalletBalance\r\n"]},"metadata":{},"sourceType":"module"}