{"version":3,"sources":["utils/getRpcUrl.ts","contexts/Localisation/translationsContext.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","utils/erc20.ts","components/UnlockButton.tsx","hooks/useTokenBalance.ts","state/block/index.ts","hooks/useApprove.ts","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","contexts/RefreshContext.tsx","state/prices/index.ts","config/index.ts","components/Tags.tsx","utils/addressHelpers.ts","hooks/useHarvest.ts","config/constants/index.ts","config/constants/types.ts","hooks/useWeb3.ts","hooks/useContract.ts","state/actions.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","utils/callHelpers.ts","config/constants/contracts.ts","components/layout/Flex.tsx","hooks/useStake.ts","hooks/useUnstake.ts","utils/multicall.ts","state/hooks.ts","config/constants/tokens.ts","utils/formatBalance.ts","config/constants/pools.ts","config/constants/farms.ts","utils/web3.ts","hooks/useGetDocumentTitlePrice.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","utils/apy.ts","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/BLZDStaking.tsx","config/constants/nfts.ts","views/Nft/components/NftGlobalNotification.tsx","hooks/useExchangeXBlzd.ts","views/XBLZD/components/CardValue.tsx","views/XBLZD/components/BlzdWalletBalance.tsx","views/XBLZD/components/ExchangeBLZDCard.tsx","hooks/useAllowance.ts","views/XBLZD/XBLZD.tsx","App.tsx","contexts/BlockContext.tsx","state/index.ts","Providers.tsx","index.tsx","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","hooks/useRefresh.ts","components/layout/Container.tsx","components/layout/Page.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx"],"names":["nodes","process","getNodeUrl","randomIndex","random","length","defaultTranslationState","translations","setTranslations","TranslationsContext","createContext","fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","calls","address","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","BigNumber","div","pow","tokenPriceVsQuote","tokenSymbol","QuoteToken","BUSD","quoteTokenSymbol","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","pid","info","totalAllocPoint","blzdPerBlock","allocPoint","_hex","poolWeight","toJSON","toNumber","multiplier","toString","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","farmAllowance","allowance","earnings","getContract","provider","Web3","eth","Contract","getAllowance","lpContract","masterChefContract","methods","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","balance","UnlockButton","props","TranslateString","useI18n","useWallet","connect","reset","onPresentConnectModal","useWalletModal","onClick","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","cakeABI","getCakeAddress","supply","fetchTotalSupply","useBurnedBalance","setBalance","bal","fetchBalance","useTokenBalance","ethereum","fastRefresh","res","blockSlice","blockNumber","setBlock","_","useApprove","useDispatch","useMasterchef","onApprove","useCallback","approve","tx","useSousApprove","sousId","sousChefContract","useSousChef","updateUserAllowance","useXBlzdApprove","useCake","getxBlzdAddress","ethers","constants","MaxUint256","send","from","StyledInputWrapper","styled","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","toLocaleString","size","RefreshContext","React","slow","fast","RefreshContextProvider","children","setSlow","setFast","interval","setInterval","prev","clearInterval","Provider","fetchPrices","createAsyncThunk","fetch","response","json","update_at","prices","Object","keys","reduce","accum","token","toLowerCase","pricesSlice","isLoading","lastUpdated","extraReducers","builder","addCase","pending","fulfilled","config","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","getAddress","chainId","addresses","xblzd","cake","masterChef","getMulticallAddress","mulltiCall","getWbnbAddress","wbnb","getLotteryAddress","lottery","getLotteryTicketAddress","lotteryNFT","useHarvest","farmPid","onReward","harvest","txHash","useAllHarvest","farmPids","harvestPromises","useSousHarvest","isUsingBnb","handleHarvest","soushHarvestBnb","soushHarvest","updateUserPendingReward","updateUserBalance","filter","isCommunity","PoolCategory","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","useWeb3","refEth","useRef","web3","setweb3","current","useContract","abi","contractOptions","setContract","useERC20","useXBlzd","xBlzd","useLottery","id","poolsConfig","pool","rawAbi","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","variableRegex","getTranslation","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useContext","exchangeXBlzd","amount","migrateToxBLZD","on","transactionHash","stake","deposit","sousStake","sousStakeBnb","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","56","97","busd","FlexLayout","useSousStake","handleStake","updateUserStakedBalance","onStake","useStake","console","SYRUPIDS","useSousUnstake","isOldSyrup","onUnstake","useUnstake","getWeb3","multi","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","i","decodeFunctionResult","ZERO","useFetchPublicData","fetchPoolsPublicDataAsync","getWeb3NoAccount","getBlockNumber","useFarms","useSelector","useFarmFromPid","useFarmUser","usePools","fetchPoolsUserDataAsync","pools","usePriceBnbBusd","usePriceBlzdBusd","useTotalValue","bnbPrice","blzdPrice","val","BNB","BLZD","plus","useFetchPriceList","useGetApiPrice","useBlock","block","tokens","bnb","projectLink","blzd","decimals","txl","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","blk","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btc","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","getBalanceNumber","displayBalance","dividedBy","getFullDisplayBalance","toFixed","stakingToken","earningToken","CORE","tokenPerBlock","sortOrder","isFinished","lpSymbol","contracts","web3NoAccount","useGetDocumentTitlePrice","blzdPriceUsd","blzdPriceUsdString","eq","undefined","minimumFractionDigits","maximumFractionDigits","document","title","GlobalStyle","createGlobalStyle","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","storedLangCode","localStorage","getItem","storedLang","getStoredLang","then","r","translationApiResponse","catch","e","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","label","icon","href","items","external","Menu","login","logout","currentLang","langs","setLang","cakePriceUsd","links","priceLink","Wrapper","Page","LogoIcon","PageLoader","style","height","src","alt","StyledLabel","Label","StyledText","Text","isDisabled","color","textDisabled","Balance","fontSize","unit","previousValue","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","currentTarget","handleSelectMax","ModalActions","disabled","WithdrawModal","CompoundModal","BalanceRow","Number","CardTitle","Card","card","isActive","Title","ActionLink","OldSyrupTitle","hasBalance","target","StyledButton","button","padding","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","COMMUNITY","StyledFooter","StyledDetailsButton","Details","Row","Flex","FlexFull","TokenLink","CardFooter","totalStaked","startBlock","endBlock","currentBlock","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","blocksUntilStart","Math","blocksRemaining","mb","role","aria-label","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","stakingLimit","isBnbPool","stakingTokenContract","rewardTokenPrice","apy","stakingTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isNaN","isFinite","getPoolApy","parseFloat","requestedApproval","setRequestedApproval","stakingTokenBalance","pendingReward","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","poolImage","toLocaleLowerCase","onPresentWithdraw","handleApprove","marginBottom","display","alignItems","flex","width","HarvestButton","PoolTabButtons","useRouteMatch","url","isExact","activeIndex","scale","as","textSubtle","Hero","Farm","path","partition","finishedPools","openPools","textAlign","Divider","exact","orderBy","RABBIT_MINTING_FARM_ADDRESS","ModalContent","Actions","NftYouWonModal","NftGlobalNotification","onPresentBurnModal","showModal","checkNftStatus","rabbitmintingfarm","totalSupplyDistributedArr","currentDistributedSupplyArr","canClaimArr","hasClaimedArr","totalSupplyDistributed","currentDistributedSupply","canClaim","hasClaimed","lt","location","useExchangeXBlzd","xBlzdContract","onExchange","CardValue","prefix","useCountUp","countUp","update","updateValue","BlzdWalletBalance","cakeBalance","lineHeight","StyledFarmStakingCard","Block","RowBetween","CardImage","img","ExchangeBLZDCard","blzdBalance","setAllowance","fetchAllowance","refreshInterval","useXBlzdAllowance","isApproved","mt","isLessThanOrEqualTo","fullWidth","XBLZD","Home","lazy","Farms","NotFound","App","window","Global","tokenMode","component","BlockContext","BlockContextProvider","previousBlock","configureStore","devTools","reducer","farmsReducer","poolsReducer","pricesReducer","blockReducer","Providers","rpcUrl","parseInt","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","getElementById","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStatking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingBlzd","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","blockLimits","totalStakings","liveData","blockLimit","totalStaking","stakingTokenBalances","Container","mediaQueries","sm","lg","Spacer","s","StyledModalActions","primaryDark","StyledModalAction","l","Children","toArray","child"],"mappings":"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","file":"static/js/main.203c2fca.chunk.js","sourcesContent":["import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","import React, { createContext } from 'react'\r\n\r\nexport interface TranslationState {\r\n  translations: Array<any>\r\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\r\n}\r\n\r\nconst defaultTranslationState: TranslationState = {\r\n  translations: [],\r\n  setTranslations: (): void => undefined,\r\n}\r\n\r\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport { QuoteToken } from '../../config/constants/types'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nconst fetchFarms = async () => {\r\n  const data = await Promise.all(\r\n    farmsConfig.map(async (farmConfig) => {\r\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\r\n      const calls = [\r\n        // Balance of token in the LP contract\r\n        {\r\n          address: farmConfig.tokenAddresses[CHAIN_ID],\r\n          name: 'balanceOf',\r\n          params: [lpAdress],\r\n        },\r\n        // Balance of quote token on LP contract\r\n        {\r\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\r\n          name: 'balanceOf',\r\n          params: [lpAdress],\r\n        },\r\n        // Balance of LP tokens in the master chef contract\r\n        {\r\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\r\n          name: 'balanceOf',\r\n          params: [getMasterChefAddress()],\r\n        },\r\n        // Total supply of LP tokens\r\n        {\r\n          address: lpAdress,\r\n          name: 'totalSupply',\r\n        },\r\n        // Token decimals\r\n        {\r\n          address: farmConfig.tokenAddresses[CHAIN_ID],\r\n          name: 'decimals',\r\n        },\r\n        // Quote token decimals\r\n        {\r\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\r\n          name: 'decimals',\r\n        },\r\n      ]\r\n\r\n      const [\r\n        tokenBalanceLP,\r\n        quoteTokenBlanceLP,\r\n        lpTokenBalanceMC,\r\n        lpTotalSupply,\r\n        tokenDecimals,\r\n        quoteTokenDecimals,\r\n      ] = await multicall(erc20, calls)\r\n\r\n      let tokenAmount\r\n      let lpTotalInQuoteToken\r\n      let tokenPriceVsQuote\r\n      if (farmConfig.isTokenOnly) {\r\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals))\r\n        if (farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD) {\r\n          tokenPriceVsQuote = new BigNumber(1)\r\n        } else {\r\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\r\n        }\r\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote)\r\n      } else {\r\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\r\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n        // Total value in staking in quote token value\r\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\r\n          .div(new BigNumber(10).pow(18))\r\n          .times(new BigNumber(2))\r\n          .times(lpTokenRatio)\r\n\r\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\r\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\r\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\r\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\r\n          .times(lpTokenRatio)\r\n\r\n        if (tokenAmount.comparedTo(0) > 0) {\r\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount)\r\n        } else {\r\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\r\n        }\r\n      }\r\n\r\n      const [info, totalAllocPoint, blzdPerBlock] = await multicall(masterchefABI, [\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'poolInfo',\r\n          params: [farmConfig.pid],\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'totalAllocPoint',\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'blzdPerBlock',\r\n        },\r\n      ])\r\n\r\n      const allocPoint = new BigNumber(info.allocPoint._hex)\r\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\r\n\r\n      return {\r\n        ...farmConfig,\r\n        tokenAmount: tokenAmount.toJSON(),\r\n        // quoteTokenAmount: quoteTokenAmount,\r\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\r\n        poolWeight: poolWeight.toNumber(),\r\n        multiplier: `${allocPoint.div(100).toString()}X`,\r\n        depositFeeBP: info.depositFeeBP,\r\n        blzdPerBlock: new BigNumber(blzdPerBlock).toNumber(),\r\n      }\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const fetchFarmUserAllowances = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string) => {\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAdress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\r\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\r\n  })\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAdress,\r\n      name: 'pendingBlzd',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport fetchFarms from './fetchFarms'\r\nimport {\r\n  // fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n} from './fetchFarmUser'\r\nimport { FarmsState, Farm } from '../types'\r\n\r\nconst initialState: FarmsState = { data: [...farmsConfig] }\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setFarmsPublicData: (state, action) => {\r\n      const liveFarmsData: Farm[] = action.payload\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    },\r\n    setFarmUserData: (state, action) => {\r\n      const { arrayOfUserDataObjects } = action.payload\r\n      arrayOfUserDataObjects.forEach((userDataEl) => {\r\n        const { index } = userDataEl\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\r\n  const farms = await fetchFarms()\r\n  dispatch(setFarmsPublicData(farms))\r\n}\r\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\r\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\r\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\r\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\r\n  // const userFarmEarnings = await fetchFarmUserEarnings(account)\r\n\r\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\r\n    return {\r\n      index,\r\n      allowance: userFarmAllowances[index],\r\n      tokenBalance: userFarmTokenBalances[index],\r\n      stakedBalance: userStakedBalances[index],\r\n      earnings: '0',\r\n    }\r\n  })\r\n\r\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\r\n}\r\n\r\nexport default farmsSlice.reducer\r\n","import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@blzd-dev/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst UnlockButton = (props) => {\r\n  const TranslateString = useI18n()\r\n  const { connect, reset } = useWallet()\r\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {TranslateString(292, 'Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { Block } from '../types'\r\n\r\nconst initialState: Block = { blockNumber: 0 }\r\n\r\nexport const blockSlice = createSlice({\r\n  name: 'Block',\r\n  initialState,\r\n  reducers: {\r\n    setBlock: (_, action) => ({ blockNumber: action.payload }),\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setBlock } = blockSlice.actions\r\n\r\nexport default blockSlice.reducer\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { getxBlzdAddress } from 'utils/addressHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n\r\n\r\n// Approve xBLZD\r\nexport const useXBlzdApprove = () => {\r\n  const { account } = useWallet()\r\n  const cakeContract = useCake()\r\n\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await cakeContract.methods\r\n        .approve(getxBlzdAddress(), ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, cakeContract])\r\n\r\n  return onApprove\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.input};\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  display: flex;\r\n  height: 72px;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { Button } from '@blzd-dev/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <StyledTokenInput>\r\n      <StyledMaxText>\r\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\r\n      </StyledMaxText>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'Max')}\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n      {depositFeeBP > 0 ? (\r\n        <StyledMaxText>\r\n          {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '}\r\n          {symbol}\r\n        </StyledMaxText>\r\n      ) : null}\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TokenInput\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setFast((prev) => prev + 1)\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setSlow((prev) => prev + 1)\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { PriceApiResponse, PriceState } from 'state/types'\r\n\r\nconst initialState: PriceState = {\r\n  isLoading: false,\r\n  lastUpdated: null,\r\n  data: null,\r\n}\r\n\r\n// Thunks\r\nexport const fetchPrices = createAsyncThunk<PriceApiResponse>('prices/fetch', async () => {\r\n  const response = await fetch('https://api.pancakeswap.com/api/v1/price')\r\n  const data = (await response.json()) as PriceApiResponse\r\n\r\n  // Return normalized token names\r\n  return {\r\n    update_at: data.update_at,\r\n    prices: Object.keys(data.prices).reduce((accum, token) => {\r\n      return {\r\n        ...accum,\r\n        [token.toLowerCase()]: data.prices[token],\r\n      }\r\n    }, {}),\r\n  }\r\n})\r\n\r\nexport const pricesSlice = createSlice({\r\n  name: 'prices',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPrices.pending, (state) => {\r\n      state.isLoading = true\r\n    })\r\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiResponse>) => {\r\n      state.isLoading = false\r\n      state.lastUpdated = action.payload.update_at\r\n      state.data = action.payload.prices\r\n    })\r\n  },\r\n})\r\n\r\nexport default pricesSlice.reducer\r\n","import BigNumber from 'bignumber.js/bignumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(1)\r\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\r\nexport const BSC_BLOCK_TIME = 3\r\n\r\nexport const CAKE_POOL_PID = 1\r\n","import React from 'react'\r\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@blzd-dev/uikit'\r\n\r\nconst NoFeeTag = () => (\r\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\r\n    No Fees\r\n  </Tag>\r\n)\r\n\r\nconst RiskTag = ({ risk }) => (\r\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\r\n    Risk {risk}\r\n  </Tag>\r\n)\r\n\r\nconst CoreTag = () => (\r\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\r\n    Core\r\n  </Tag>\r\n)\r\n\r\nconst CommunityTag = () => (\r\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\r\n    Community\r\n  </Tag>\r\n)\r\n\r\nconst BinanceTag = () => (\r\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\r\n    Binance\r\n  </Tag>\r\n)\r\n\r\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\r\n","import addresses from 'config/constants/contracts'\r\nimport { Address } from 'config/constants/types'\r\n\r\nconst chainId = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const getAddress = (address: Address): string => {\r\n  const mainNetChainId = 56\r\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\r\n}\r\n\r\nexport const getxBlzdAddress = () => {\r\n  return addresses.xblzd[chainId]\r\n}\r\n\r\nexport const getCakeAddress = () => {\r\n  return addresses.cake[chainId]\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return addresses.masterChef[chainId]\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return addresses.mulltiCall[chainId]\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return addresses.wbnb[chainId]\r\n}\r\nexport const getLotteryAddress = () => {\r\n  return addresses.lottery[chainId]\r\n}\r\nexport const getLotteryTicketAddress = () => {\r\n  return addresses.lotteryNFT[chainId]\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import farmsConfig from './farms'\r\n\r\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\r\n\r\nexport { farmsConfig, communityFarms }\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  subTitle?: string\r\n  description?: string\r\n  launchDate: string\r\n  launchTime: string\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  projectSiteUrl: string\r\n  currency: string\r\n  currencyAddress: string\r\n  tokenDecimals: number\r\n  releaseBlockNumber: number\r\n}\r\n\r\nexport enum QuoteToken {\r\n  'BNB' = 'BNB',\r\n  'BLZD' = 'BLZD',\r\n  'CAKE' = 'CAKE',\r\n  'SYRUP' = 'SYRUP',\r\n  'BUSD' = 'BUSD',\r\n  'TWT' = 'TWT',\r\n  'UST' = 'UST',\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n}\r\n\r\nexport interface Address {\r\n  97?: string\r\n  56: string\r\n}\r\n\r\nexport interface Token {\r\n  symbol: string\r\n  address?: Address\r\n  decimals?: number\r\n  projectLink?: string\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  tokenSymbol: string\r\n  tokenAddresses: Address\r\n  quoteTokenSymbol: QuoteToken\r\n  quoteTokenAdresses: Address\r\n  multiplier?: string\r\n  isTokenOnly?: boolean\r\n  isCommunity?: boolean\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  stakingLimit?: number\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n}\r\n\r\nexport type Nft = {\r\n  name: string\r\n  description: string\r\n  originalImage: string\r\n  previewImage: string\r\n  blurImage: string\r\n  sortOrder: number\r\n  bunnyId: number\r\n}\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the ethereum provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\r\n  const refEth = useRef(ethereum)\r\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\r\n\r\n  useEffect(() => {\r\n    if (ethereum !== refEth.current) {\r\n      setweb3(new Web3(ethereum || httpProvider))\r\n      refEth.current = ethereum\r\n    }\r\n  }, [ethereum])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import { useEffect, useState } from 'react'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { ContractOptions } from 'web3-eth-contract'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress, getxBlzdAddress } from 'utils/addressHelpers'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport ifo from 'config/abi/ifo.json'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\r\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\r\nimport lottery from 'config/abi/lottery.json'\r\nimport lotteryTicket from 'config/abi/lotteryNft.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\nimport xBlzd from 'config/abi/xBlzd.json'\r\n\r\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\r\n  const web3 = useWeb3()\r\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\r\n\r\n  useEffect(() => {\r\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\r\n  }, [abi, address, contractOptions, web3])\r\n\r\n  return contract\r\n}\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const ifoAbi = (ifo as unknown) as AbiItem\r\n  return useContract(ifoAbi, address)\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const erc20Abi = (erc20 as unknown) as AbiItem\r\n  return useContract(erc20Abi, address)\r\n}\r\n\r\nexport const useCake = () => {\r\n  return useERC20(getCakeAddress())\r\n}\r\n\r\nexport const useXBlzd = () => {\r\n  const xBlzdAbi = (xBlzd as unknown) as AbiItem\r\n  return useContract(xBlzdAbi, getxBlzdAddress())\r\n}\r\n\r\nexport const useRabbitMintingFarm = (address: string) => {\r\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\r\n  return useContract(rabbitMintingFarmAbi, address)\r\n}\r\n\r\nexport const usePancakeRabbits = (address: string) => {\r\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\r\n  return useContract(pancakeRabbitsAbi, address)\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const abi = (lottery as unknown) as AbiItem\r\n  return useContract(abi, getLotteryAddress())\r\n}\r\n\r\nexport const useLotteryTicket = () => {\r\n  const abi = (lotteryTicket as unknown) as AbiItem\r\n  return useContract(abi, getLotteryTicketAddress())\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const abi = (masterChef as unknown) as AbiItem\r\n  return useContract(abi, getMasterChefAddress())\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  const abi = (rawAbi as unknown) as AbiItem\r\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\r\n}\r\n\r\nexport default useContract\r\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\r\nexport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  updateUserAllowance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n  updateUserStakedBalance,\r\n} from './pools'\r\nexport { setBlock } from './block'\r\n","import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\n\r\nconst variableRegex = /%(.*?)%/\r\n\r\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\r\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\r\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\r\n  const fallbackValueAtIndex = fallback.split(' ')[0]\r\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\r\n}\r\n\r\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\r\n  const foundTranslation = translations.find((translation) => {\r\n    return translation.data.stringId === translationId\r\n  })\r\n  if (foundTranslation) {\r\n    const translatedString = foundTranslation.data.text\r\n    const includesVariable = translatedString.includes('%')\r\n    if (includesVariable) {\r\n      return replaceDynamicString(translatedString, fallback)\r\n    }\r\n    return translatedString\r\n  }\r\n  return fallback\r\n}\r\n\r\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\r\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\r\n// @see https://reactjs.org/docs/hooks-rules.html\r\nexport const TranslateString = (translationId: number, fallback: string) => {\r\n  const { translations } = useContext(TranslationsContext)\r\n  if (translations[0] === 'error') {\r\n    return fallback\r\n  }\r\n  if (translations.length > 0) {\r\n    return getTranslation(translations, translationId, fallback)\r\n  }\r\n  return fallback\r\n}\r\n","import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\nimport { getTranslation } from '../utils/translateTextHelpers'\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string) => {\r\n    if (translations[0] === 'error') {\r\n      return fallback\r\n    }\r\n    if (translations.length > 0) {\r\n      return getTranslation(translations, translationId, fallback)\r\n    }\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const exchangeXBlzd = async (contract, amount, account) => {\r\n  return contract.methods\r\n    .migrateToxBLZD(amount)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","export default {\r\n  cake: {\r\n    56: '0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\r\n    97: '',\r\n  },\r\n  xblzd: {\r\n    56: '0x367CdDA266ADa588d380C7B970244434e4Dde790',\r\n    97: '',\r\n  },\r\n  masterChef: {\r\n    56: '0x740A1c61A17BC7F498e33251dAADc80ECB27E05A',\r\n    97: '',\r\n  },\r\n  wbnb: {\r\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    97: '',\r\n  },\r\n  lottery: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n  lotteryNFT: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n  mulltiCall: {\r\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\r\n    97: '',\r\n  },\r\n  busd: {\r\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n    97: '',\r\n  },\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useStake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport const useSousStake = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        await stake(masterChefContract, 0, amount, account)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount, account)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, account)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  fetchFarmUserDataAsync,\r\n  updateUserStakedBalance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n} from 'state/actions'\r\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nconst SYRUPIDS = []\r\n\r\nexport const useSousUnstake = (sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const isOldSyrup = SYRUPIDS.includes(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        console.info(txHash)\r\n      } else if (isOldSyrup) {\r\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      } else {\r\n        const txHash = await sousUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import { AbiItem } from 'web3-utils'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\n\r\ninterface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (exemple: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\nconst multicall = async (abi: any[], calls: Call[]) => {\r\n  const web3 = getWeb3()\r\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const { returnData } = await multi.methods.aggregate(calldata).call()\r\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import BigNumber from 'bignumber.js'\r\nimport { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport { fetchFarmsPublicDataAsync, fetchPoolsUserDataAsync, fetchPoolsPublicDataAsync, setBlock } from './actions'\r\nimport { State, Farm, Pool, Block, PriceState } from './types'\r\nimport { QuoteToken } from '../config/constants/types'\r\nimport { fetchPrices } from './prices'\r\n\r\nconst ZERO = new BigNumber(0)\r\n\r\nexport const useFetchPublicData = () => {\r\n  const dispatch = useDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync())\r\n    dispatch(fetchPoolsPublicDataAsync())\r\n  }, [dispatch, slowRefresh])\r\n\r\n  useEffect(() => {\r\n    const web3 = getWeb3NoAccount()\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      dispatch(setBlock(blockNumber))\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [dispatch])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): Farm[] => {\r\n  const farms = useSelector((state: State) => state.farms.data)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n  \r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\r\n  }\r\n}\r\n\r\n// Pools\r\n\r\nexport const usePools = (account): Pool[] => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const usePoolFromPid = (sousId): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return pool\r\n}\r\n\r\n// Prices\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const pid = 3 // BNB-BUSD LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceBlzdBusd = (): BigNumber => {\r\n  const pid = 1 // BLZD-BUSD LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const useTotalValue = (): BigNumber => {\r\n  const farms = useFarms()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const blzdPrice = usePriceBlzdBusd()\r\n  let value = new BigNumber(0)\r\n  for (let i = 0; i < farms.length; i++) {\r\n    const farm = farms[i]\r\n    if (farm.lpTotalInQuoteToken) {\r\n      let val\r\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\r\n      } else if (farm.quoteTokenSymbol === QuoteToken.BLZD) {\r\n        val = blzdPrice.times(farm.lpTotalInQuoteToken)\r\n      } else {\r\n        val = farm.lpTotalInQuoteToken\r\n      }\r\n      value = value.plus(val)\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\n// Prices\r\nexport const useFetchPriceList = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPrices())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\nexport const useGetApiPrices = () => {\r\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\r\n  return prices\r\n}\r\n\r\nexport const useGetApiPrice = (token: string) => {\r\n  const prices = useGetApiPrices()\r\n  let tokenSymbol = token.toLowerCase()\r\n\r\n  if (!prices) {\r\n    return null\r\n  }\r\n\r\n  if (tokenSymbol === 'bnb') tokenSymbol = 'wbnb'\r\n  if (tokenSymbol === 'btc') tokenSymbol = 'btcb'\r\n\r\n  return prices[tokenSymbol]\r\n}\r\n\r\n// Block\r\nexport const useBlock = (): Block => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n","const tokens = {\r\n  bnb: {\r\n    symbol: 'BNB',\r\n    projectLink: 'https://www.binance.com/',\r\n  },\r\n  blzd: {\r\n    symbol: 'BLZD',\r\n    address: {\r\n      56: '0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\r\n      97: '0x1977ECbdE6832920c3554E238deDFfBC5ed996c9',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://SMURF.money/',\r\n  },\r\n  cake: {\r\n    symbol: 'CAKE',\r\n    address: {\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n  txl: {\r\n    symbol: 'TXL',\r\n    address: {\r\n      56: '0x1ffd0b47127fdd4097e54521c9e2c7f0d66aafc5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://tixl.org/',\r\n  },\r\n  cos: {\r\n    symbol: 'COS',\r\n    address: {\r\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.contentos.io/',\r\n  },\r\n  bunny: {\r\n    symbol: 'BUNNY',\r\n    address: {\r\n      56: '0xc9849e6fdb743d08faee3e34dd2d1bc69ea11a51',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakebunny.finance/',\r\n  },\r\n  alice: {\r\n    symbol: 'ALICE',\r\n    address: {\r\n      56: '0xac51066d7bec65dc4589368da368b212745d63e8',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://www.myneighboralice.com/',\r\n  },\r\n  for: {\r\n    symbol: 'FOR',\r\n    address: {\r\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.for.tube/home',\r\n  },\r\n  bux: {\r\n    symbol: 'BUX',\r\n    address: {\r\n      56: '0x211ffbe424b90e25a15531ca322adf1559779e45',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://getbux.com/bux-crypto/',\r\n  },\r\n  nuls: {\r\n    symbol: 'NULS',\r\n    address: {\r\n      56: '0x8cd6e29d3686d24d3c2018cee54621ea0f89313b',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://www.nuls.io/',\r\n  },\r\n  belt: {\r\n    symbol: 'BELT',\r\n    address: {\r\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://beta.belt.fi/',\r\n  },\r\n  ramp: {\r\n    symbol: 'RAMP',\r\n    address: {\r\n      56: '0x8519ea49c997f50ceffa444d240fb655e89248aa',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://rampdefi.com/',\r\n  },\r\n  bfi: {\r\n    symbol: 'BFI',\r\n    address: {\r\n      56: '0x81859801b01764d4f0fa5e64729f5a6c3b91435b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bearn.fi/',\r\n  },\r\n  dexe: {\r\n    symbol: 'DEXE',\r\n    address: {\r\n      56: '0x039cb485212f996a9dbb85a9a75d898f94d38da6',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dexe.network/',\r\n  },\r\n  bel: {\r\n    symbol: 'BEL',\r\n    address: {\r\n      56: '0x8443f091997f06a61670b735ed92734f5628692f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bella.fi/',\r\n  },\r\n  tpt: {\r\n    symbol: 'TPT',\r\n    address: {\r\n      56: '0xeca41281c24451168a37211f0bc2b8645af45092',\r\n      97: '',\r\n    },\r\n    decimals: 4,\r\n    projectLink: 'https://www.tokenpocket.pro/',\r\n  },\r\n  watch: {\r\n    symbol: 'WATCH',\r\n    address: {\r\n      56: '0x7a9f28eb62c791422aa23ceae1da9c847cbec9b0',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://yieldwatch.net/',\r\n  },\r\n  xmark: {\r\n    symbol: 'xMARK',\r\n    address: {\r\n      56: '0x26a5dfab467d4f58fb266648cae769503cec9580',\r\n      97: '',\r\n    },\r\n    decimals: 9,\r\n    projectLink: 'https://benchmarkprotocol.finance/',\r\n  },\r\n  bmxx: {\r\n    symbol: 'bMXX',\r\n    address: {\r\n      56: '0x4131b87f74415190425ccd873048c708f8005823',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://multiplier.finance/',\r\n  },\r\n  iotx: {\r\n    symbol: 'IOTX',\r\n    address: {\r\n      56: '0x9678e42cebeb63f23197d726b29b1cb20d0064e5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://iotex.io/',\r\n  },\r\n  bor: {\r\n    symbol: 'BOR',\r\n    address: {\r\n      56: '0x92d7756c60dcfd4c689290e8a9f4d263b3b32241',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.boringdao.com/',\r\n  },\r\n  bopen: {\r\n    symbol: 'bOPEN',\r\n    address: {\r\n      56: '0xf35262a9d427f96d2437379ef090db986eae5d42',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://opendao.io/',\r\n  },\r\n  dodo: {\r\n    symbol: 'DODO',\r\n    address: {\r\n      56: '0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dodoex.io/',\r\n  },\r\n  swingby: {\r\n    symbol: 'SWINGBY',\r\n    address: {\r\n      56: '0x71de20e0c4616e7fcbfdd3f875d568492cbe4739',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://swingby.network/',\r\n  },\r\n  bry: {\r\n    symbol: 'BRY',\r\n    address: {\r\n      56: '0xf859bf77cbe8699013d6dbc7c2b926aaf307f830',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://berrydata.co/',\r\n  },\r\n  zee: {\r\n    symbol: 'ZEE',\r\n    address: {\r\n      56: '0x44754455564474a89358b2c2265883df993b12f0',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://zeroswap.io/',\r\n  },\r\n  swgb: {\r\n    symbol: 'SWGb',\r\n    address: {\r\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://swirgepay.com/',\r\n  },\r\n  sfp: {\r\n    symbol: 'SFP',\r\n    address: {\r\n      56: '0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.safepal.io/',\r\n  },\r\n  lina: {\r\n    symbol: 'LINA',\r\n    address: {\r\n      56: '0x762539b45a1dcce3d36d080f74d1aed37844b878',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://linear.finance/',\r\n  },\r\n  lit: {\r\n    symbol: 'LIT',\r\n    address: {\r\n      56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.litentry.com/',\r\n  },\r\n  hget: {\r\n    symbol: 'HGET',\r\n    address: {\r\n      56: '0xc7d8d35eba58a0935ff2d5a33df105dd9f071731',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://www.hedget.com/',\r\n  },\r\n  bdo: {\r\n    symbol: 'BDO',\r\n    address: {\r\n      56: '0x190b589cf9fb8ddeabbfeae36a813ffb2a702454',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bdollar.fi/',\r\n  },\r\n  egld: {\r\n    symbol: 'EGLD',\r\n    address: {\r\n      56: '0xbf7c81fff98bbe61b40ed186e4afd6ddd01337fe',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://elrond.com/',\r\n  },\r\n  ust: {\r\n    symbol: 'UST',\r\n    address: {\r\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  wsote: {\r\n    symbol: 'wSOTE',\r\n    address: {\r\n      56: '0x541e619858737031a1244a5d0cd47e5ef480342c',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://soteria.finance/#/',\r\n  },\r\n  front: {\r\n    symbol: 'FRONT',\r\n    address: {\r\n      56: '0x928e55dab735aa8260af3cedada18b5f70c72f1b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://frontier.xyz/',\r\n  },\r\n  helmet: {\r\n    symbol: 'Helmet',\r\n    address: {\r\n      56: '0x948d2a81086a075b3130bac19e4c6dee1d2e3fe8',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.helmet.insure/',\r\n  },\r\n  btcst: {\r\n    symbol: 'BTCST',\r\n    address: {\r\n      56: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\r\n      97: '',\r\n    },\r\n    decimals: 17,\r\n    projectLink: 'https://www.1-b.tc/',\r\n  },\r\n  bscx: {\r\n    symbol: 'BSCX',\r\n    address: {\r\n      56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bscex.org/',\r\n  },\r\n  ten: {\r\n    symbol: 'TEN',\r\n    address: {\r\n      56: '0xdff8cb622790b7f92686c722b02cab55592f152c',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.tenet.farm/',\r\n  },\r\n  balbt: {\r\n    symbol: 'bALBT',\r\n    address: {\r\n      56: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://allianceblock.io/',\r\n  },\r\n  asr: {\r\n    symbol: 'ASR',\r\n    address: {\r\n      56: '0x80d5f92c2c8c682070c95495313ddb680b267320',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  atm: {\r\n    symbol: 'ATM',\r\n    address: {\r\n      56: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  og: {\r\n    symbol: 'OG',\r\n    address: {\r\n      56: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  reef: {\r\n    symbol: 'REEF',\r\n    address: {\r\n      56: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://reef.finance/',\r\n  },\r\n  ditto: {\r\n    symbol: 'DITTO',\r\n    address: {\r\n      56: '0x233d91a0713155003fc4dce0afa871b508b3b715',\r\n      97: '',\r\n    },\r\n    decimals: 9,\r\n    projectLink: 'https://ditto.money/',\r\n  },\r\n  juv: {\r\n    symbol: 'JUV',\r\n    address: {\r\n      56: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  psg: {\r\n    symbol: 'PSG',\r\n    address: {\r\n      56: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  vai: {\r\n    symbol: 'VAI',\r\n    address: {\r\n      56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://venus.io/',\r\n  },\r\n  wbnb: {\r\n    symbol: 'wBNB',\r\n    address: {\r\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n  blk: {\r\n    symbol: 'BLK',\r\n    address: {\r\n      56: '0x63870a18b6e42b01ef1ad8a2302ef50b7132054f',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://blink.wink.org',\r\n  },\r\n  unfi: {\r\n    symbol: 'UNFI',\r\n    address: {\r\n      56: '0x728c5bac3c3e370e372fc4671f9ef6916b814d8b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://unifiprotocol.com',\r\n  },\r\n  twt: {\r\n    symbol: 'TWT',\r\n    address: {\r\n      56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://trustwallet.com/',\r\n  },\r\n  hard: {\r\n    symbol: 'HARD',\r\n    address: {\r\n      56: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://hard.kava.io',\r\n  },\r\n  broobee: {\r\n    symbol: 'bROOBEE',\r\n    address: {\r\n      56: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://roobee.io/',\r\n  },\r\n  stax: {\r\n    symbol: 'STAX',\r\n    address: {\r\n      56: '0x0da6ed8b13214ff28e9ca979dd37439e8a88f6c4',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'http://stablexswap.com/',\r\n  },\r\n  nar: {\r\n    symbol: 'NAR',\r\n    address: {\r\n      56: '0xa1303e6199b319a891b79685f0537d289af1fc83',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://narwhalswap.org/',\r\n  },\r\n  nya: {\r\n    symbol: 'NYA',\r\n    address: {\r\n      56: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://nyanswop.org/',\r\n  },\r\n  ctk: {\r\n    symbol: 'CTK',\r\n    address: {\r\n      56: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://www.certik.foundation/',\r\n  },\r\n  inj: {\r\n    symbol: 'INJ',\r\n    address: {\r\n      56: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://injectiveprotocol.com/',\r\n  },\r\n  sxp: {\r\n    symbol: 'SXP',\r\n    address: {\r\n      56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://swipe.io/',\r\n  },\r\n  alpha: {\r\n    symbol: 'ALPHA',\r\n    address: {\r\n      56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://alphafinance.io/',\r\n  },\r\n  xvs: {\r\n    symbol: 'XVS',\r\n    address: {\r\n      56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://venus.io/',\r\n  },\r\n  sushi: {\r\n    symbol: 'SUSHI',\r\n    address: {\r\n      56: '0x947950bcc74888a40ffa2593c5798f11fc9124c4',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://sushi.com/',\r\n  },\r\n  comp: {\r\n    symbol: 'COMP',\r\n    address: {\r\n      56: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://compound.finance/',\r\n  },\r\n  syrup: {\r\n    symbol: 'SYRUP',\r\n    address: {\r\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\r\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n  bifi: {\r\n    symbol: 'BIFI',\r\n    address: {\r\n      56: '0xca3f508b8e4dd382ee878a314789373d80a5190a',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://beefy.finance/',\r\n  },\r\n  dusk: {\r\n    symbol: 'DUSK',\r\n    address: {\r\n      56: '0xb2bd0749dbe21f623d9baba856d3b0f0e1bfec9c',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dusk.network/',\r\n  },\r\n  busd: {\r\n    symbol: 'BUSD',\r\n    address: {\r\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.paxos.com/busd/',\r\n  },\r\n  eth: {\r\n    symbol: 'ETH',\r\n    address: {\r\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ethereum.org/en/',\r\n  },\r\n  beth: {\r\n    symbol: 'BETH',\r\n    address: {\r\n      56: '0x250632378e573c6be1ac2f97fcdf00515d0aa91b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\r\n  },\r\n  mamzn: {\r\n    symbol: 'mAMZN',\r\n    address: {\r\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  mgoogl: {\r\n    symbol: 'mGOOGL',\r\n    address: {\r\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  mnflx: {\r\n    symbol: 'mNFLX',\r\n    address: {\r\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  mtsla: {\r\n    symbol: 'mTSLA',\r\n    address: {\r\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  ltc: {\r\n    symbol: 'LTC',\r\n    address: {\r\n      56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://litecoin.org/',\r\n  },\r\n  usdc: {\r\n    symbol: 'USDC',\r\n    address: {\r\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.centre.io/usdc',\r\n  },\r\n  dai: {\r\n    symbol: 'DAI',\r\n    address: {\r\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'http://www.makerdao.com/',\r\n  },\r\n  ada: {\r\n    symbol: 'ADA',\r\n    address: {\r\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.cardano.org/',\r\n  },\r\n  band: {\r\n    symbol: 'BAND',\r\n    address: {\r\n      56: '0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bandprotocol.com/',\r\n  },\r\n  dot: {\r\n    symbol: 'DOT',\r\n    address: {\r\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://polkadot.network/',\r\n  },\r\n  eos: {\r\n    symbol: 'EOS',\r\n    address: {\r\n      56: '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://eos.io/',\r\n  },\r\n  link: {\r\n    symbol: 'LINK',\r\n    address: {\r\n      56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://chain.link/',\r\n  },\r\n  usdt: {\r\n    symbol: 'USDT',\r\n    address: {\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n      56: '0x55d398326f99059ff775485246999027b3197955',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://tether.to/',\r\n  },\r\n  btc: {\r\n    symbol: 'BTC',\r\n    address: {\r\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bitcoin.org/',\r\n  },\r\n  xrp: {\r\n    symbol: 'XRP',\r\n    address: {\r\n      56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ripple.com/xrp/',\r\n  },\r\n  atom: {\r\n    symbol: 'ATOM',\r\n    address: {\r\n      56: '0x0eb3a705fc54725037cc9e008bdede697f62f335',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://cosmos.network/',\r\n  },\r\n  yfii: {\r\n    symbol: 'YFII',\r\n    address: {\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n      56: '0x7f70642d88cf1c4a3a7abb072b53b929b653eda5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dfi.money/#/',\r\n  },\r\n  xtz: {\r\n    symbol: 'XTZ',\r\n    address: {\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n      56: '0x16939ef78684453bfdfb47825f8a5f714f12623a',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.tezos.com/',\r\n  },\r\n  bch: {\r\n    symbol: 'BCH',\r\n    address: {\r\n      56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'http://bch.info/',\r\n  },\r\n  yfi: {\r\n    symbol: 'YFI',\r\n    address: {\r\n      56: '0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://yearn.finance/',\r\n  },\r\n  uni: {\r\n    symbol: 'UNI',\r\n    address: {\r\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://uniswap.org/',\r\n  },\r\n  fil: {\r\n    symbol: 'FIL',\r\n    address: {\r\n      56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://filecoin.io/',\r\n  },\r\n  bake: {\r\n    symbol: 'BAKE',\r\n    address: {\r\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bakeryswap.org/',\r\n  },\r\n  burger: {\r\n    symbol: 'BURGER',\r\n    address: {\r\n      56: '0xae9269f27437f0fcbc232d39ec814844a51d6b8f',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://burgerswap.org/',\r\n  },\r\n  bdigg: {\r\n    symbol: 'bDIGG',\r\n    address: {\r\n      56: '0x5986d5c77c65e5801a5caa4fae80089f870a71da',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://badger.finance/',\r\n  },\r\n  bbadger: {\r\n    symbol: 'bBadger',\r\n    address: {\r\n      56: '0x1f7216fdb338247512ec99715587bb97bbf96eae',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://badger.finance/',\r\n  },\r\n  trade: {\r\n    symbol: 'TRADE',\r\n    address: {\r\n      56: '0x7af173f350d916358af3e218bdf2178494beb748',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://unitrade.app/',\r\n  },\r\n  pnt: {\r\n    symbol: 'PNT',\r\n    address: {\r\n      56: '0x7a1da9f49224ef98389b071b8a3294d1cc5e3e6a',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ptokens.io/',\r\n  },\r\n}\r\n\r\nexport default tokens\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import tokens from './tokens'\r\nimport { PoolCategory, PoolConfig } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  {\r\n    sousId: 1,\r\n    stakingToken: tokens.blzd,\r\n    earningToken: tokens.bnb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x481055C4182B9A5e90d8E7EDe9f65b957dC0Ec22',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.002480',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 2,\r\n    stakingToken: tokens.blzd,\r\n    earningToken: tokens.bifi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x95b3389f41dbf513De5710A68220efF5a42dB068',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00009920',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 3,\r\n    stakingToken: tokens.blzd,\r\n    earningToken: tokens.btc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa918f270F3F9bC0032aF233876BA1EE43d4946e5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0000049603',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 4,\r\n    stakingToken: tokens.blzd,\r\n    earningToken: tokens.eth,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6F7CAFCD187d9cAbfa5A0139c7cC28c03BF7633b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.000248',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 5,\r\n    stakingToken: tokens.blzd,\r\n    earningToken: tokens.bnb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8f3b8638d5a766dfa685032f1eC681B1AfC0d047',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.001165',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 6,\r\n    stakingToken: tokens.blzd,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa7A925D63a83Ab37145F1f63D266d4e3D0dDA887',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.024305',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n]\r\n\r\nexport default pools\r\n","import contracts from './contracts'\r\nimport { FarmConfig, QuoteToken } from './types'\r\n\r\nconst farms: FarmConfig[] = [\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'BLZD-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE9C53B5Ab0C9cDBd72A03151a628863C28c55A6A',\r\n    },\r\n    tokenSymbol: 'BLZD',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'BLZD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x27A5a5c1fF96447F2a0c4baDcF26E7c65C040E3C',\r\n    },\r\n    tokenSymbol: 'BLZD',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 3,\r\n    lpSymbol: 'BNB-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1B96B92314C44b159149f7E0303511fB2Fc4774f',\r\n    },\r\n    tokenSymbol: 'BNB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 4,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7561eee90e24f3b348e1087a005f78b4c8453524',\r\n    },\r\n    tokenSymbol: 'BTCB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 5,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x70d8929d04b60af4fb9b58713ebcf18765ade422',\r\n    },\r\n    tokenSymbol: 'ETH',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 11,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbCD62661A6b1DEd703585d3aF7d7649Ef4dcDB5c',\r\n    },\r\n    tokenSymbol: 'DOT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 6,\r\n    lpSymbol: 'CAKE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0ed8e0a2d99643e1e65cca22ed4424090b8b7458',\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 7,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa527a61703d82139f8a06bc30097cc9caa2df5a6',\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  // caves\r\n  {\r\n    pid: 0,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'BLZD',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE9C53B5Ab0C9cDBd72A03151a628863C28c55A6A', // BLZD-BUSD LP\r\n    },\r\n    tokenSymbol: 'BLZD',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 8,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'ALLOY',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4bE10283b2183032BE35E6537C9737DF5a3F6C4A', // ALLOY-BNB LP\r\n    },\r\n    tokenSymbol: 'ALLOY',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x5eF5994fA33FF4eB6c82d51ee1DC145c546065Bd',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 9,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'BIFI',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD', // BIFI-BNB LP\r\n    },\r\n    tokenSymbol: 'BIFI',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 10,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'vBSWAP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8DD39f0a49160cDa5ef1E2a2fA7396EEc7DA8267', // vBSWAP-BNB LP\r\n    },\r\n    tokenSymbol: 'vBSWAP',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x4f0ed527e8A95ecAA132Af214dFd41F30b361600',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 12,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'WATCH',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdC6C130299E53ACD2CC2D291fa10552CA2198a6b', // WATCH-BNB LP\r\n    },\r\n    tokenSymbol: 'WATCH',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n]\r\n\r\nexport default farms\r\n","import Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { ContractOptions } from 'web3-eth-contract'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\nconst web3NoAccount = new Web3(httpProvider)\r\n\r\n/**\r\n * Provides a web3 instance using our own private provider httpProver\r\n */\r\nconst getWeb3 = () => {\r\n  const web3 = new Web3(httpProvider)\r\n  return web3\r\n}\r\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\r\n  const web3 = getWeb3()\r\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\r\n}\r\n\r\nconst getWeb3NoAccount = () => {\r\n  return web3NoAccount\r\n}\r\n\r\nexport { getWeb3NoAccount }\r\nexport { getWeb3, getContract, httpProvider }\r\nexport default web3NoAccount\r\n","import { useEffect } from 'react'\r\nimport { usePriceBlzdBusd } from 'state/hooks'\r\n\r\nconst useGetDocumentTitlePrice = () => {\r\n  const blzdPriceUsd = usePriceBlzdBusd()\r\n\r\n  const blzdPriceUsdString = blzdPriceUsd.eq(0)\r\n    ? ''\r\n    : ` - $${blzdPriceUsd.toNumber().toLocaleString(undefined, {\r\n        minimumFractionDigits: 3,\r\n        maximumFractionDigits: 3,\r\n      })}`\r\n\r\n  useEffect(() => {\r\n    document.title = `SMURF.MONEY${blzdPriceUsdString}`\r\n  }, [blzdPriceUsdString])\r\n}\r\nexport default useGetDocumentTitlePrice\r\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from '@blzd-dev/uikit'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Rubik', sans-serif;\r\n  }\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","export const EN = { code: 'en', language: 'English' }\r\nexport const AR = { code: 'ar', language: 'العربية' }\r\nexport const CA = { code: 'ca', language: 'Català' }\r\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\r\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\r\nexport const CS = { code: 'cs', language: 'Čeština' }\r\nexport const DA = { code: 'da', language: 'Dansk' }\r\nexport const DE = { code: 'de', language: 'Deutsch' }\r\nexport const NL = { code: 'nl', language: 'Nederlands' }\r\nexport const FIL = { code: 'fil', language: 'Filipino' }\r\nexport const FI = { code: 'fi', language: 'Suomalainen' }\r\nexport const FR = { code: 'fr', language: 'Français' }\r\nexport const EL = { code: 'el', language: 'Ελληνικά' }\r\nexport const HI = { code: 'hi', language: 'हिंदी' }\r\nexport const HU = { code: 'hu', language: 'Magyar' }\r\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\r\nexport const IT = { code: 'it', language: 'Italiano' }\r\nexport const JA = { code: 'ja', language: '日本語' }\r\nexport const KO = { code: 'ko', language: '한국어' }\r\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\r\nexport const RO = { code: 'ro', language: 'Română' }\r\nexport const RU = { code: 'ru', language: 'Русский' }\r\nexport const SR = { code: 'sr', language: 'Српски' }\r\nexport const ESES = { code: 'es-ES', language: 'Español' }\r\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\r\nexport const TA = { code: 'ta', language: 'தமிழ்' }\r\nexport const TR = { code: 'tr', language: 'Türkçe' }\r\nexport const UK = { code: 'uk', language: 'Українська' }\r\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\r\n\r\nexport const allLanguages = [\r\n  EN,\r\n  // AR,\r\n  // CA,\r\n  ZHCN,\r\n  ZHTW,\r\n  // CS,\r\n  // DA,\r\n  // DE,\r\n  // NL,\r\n  // FIL,\r\n  // FI,\r\n  // FR,\r\n  // EL,\r\n  // HI,\r\n  // HU,\r\n  // ID,\r\n  // IT,\r\n  // JA,\r\n  // KO,\r\n  // PTBR,\r\n  // RO,\r\n  // RU,\r\n  // SR,\r\n  // ESES,\r\n  // SVSE,\r\n  // TA,\r\n  // TR,\r\n  // UK,\r\n  // VI,\r\n]\r\n","import React, { useState, useEffect } from 'react'\r\n// import { StringTranslations } from '@crowdin/crowdin-api-client'\r\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\r\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\r\n\r\nconst CACHE_KEY = 'pancakeSwapLanguage'\r\n\r\nexport interface LangType {\r\n  code: string\r\n  language: string\r\n}\r\n\r\nexport interface LanguageState {\r\n  selectedLanguage: LangType\r\n  setSelectedLanguage: (langObject: LangType) => void\r\n  translatedLanguage: LangType\r\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\r\n}\r\n\r\nconst LanguageContext = React.createContext({\r\n  selectedLanguage: EN,\r\n  setSelectedLanguage: () => undefined,\r\n  translatedLanguage: EN,\r\n  setTranslatedLanguage: () => undefined,\r\n} as LanguageState)\r\n\r\n// const fileId = 8\r\n// const projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\r\n// const stringTranslationsApi = new StringTranslations({\r\n//   token: process.env.REACT_APP_CROWDIN_APIKEY,\r\n// })\r\n\r\n// const fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\r\n//   return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\r\n// }\r\n\r\nconst LanguageContextProvider = ({ children }) => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\r\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\r\n  const [translations, setTranslations] = useState<Array<any>>([])\r\n\r\n  const getStoredLang = (storedLangCode: string) => {\r\n    return allLanguages.filter((language) => {\r\n      return language.code === storedLangCode\r\n    })[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\r\n    if (storedLangCode) {\r\n      const storedLang = getStoredLang(storedLangCode)\r\n      setSelectedLanguage(storedLang)\r\n    } else {\r\n      setSelectedLanguage(EN)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage) {\r\n      // console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\r\n      fetch(`./i18n/${selectedLanguage.code}.json`)\r\n        .then((r) => r.json())\r\n        // fetchTranslationsForSelectedLanguage(selectedLanguage)\r\n        .then((translationApiResponse) => {\r\n          if (translationApiResponse.data.length < 1) {\r\n            setTranslations(['error'])\r\n          } else {\r\n            setTranslations(translationApiResponse.data)\r\n          }\r\n        })\r\n        .then(() => setTranslatedLanguage(selectedLanguage))\r\n        .catch((e) => {\r\n          console.error('ERROR')\r\n          console.error(e)\r\n          setTranslations(['error'])\r\n        })\r\n    }\r\n  }, [selectedLanguage, setTranslations])\r\n\r\n  const handleLanguageSelect = (langObject: LangType) => {\r\n    setSelectedLanguage(langObject)\r\n    localStorage.setItem(CACHE_KEY, langObject.code)\r\n  }\r\n\r\n  return (\r\n    <LanguageContext.Provider\r\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\r\n    >\r\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\r\n    </LanguageContext.Provider>\r\n  )\r\n}\r\n\r\nexport { LanguageContext, LanguageContextProvider }\r\n","import React, { useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@blzd-dev/uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\r\n  })\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\r\nimport { ThemeContext } from 'contexts/ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeCopntext)\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","import { MenuEntry } from '@blzd-dev/uikit'\r\n\r\nconst config: MenuEntry[] = [\r\n  {\r\n    label: 'Home',\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: 'BLZD to xBLZD',\r\n    icon: 'TradeIcon',\r\n    href: '/xBLZD',\r\n  },\r\n  {\r\n    label: 'Trade',\r\n    icon: 'TradeIcon',\r\n    items: [\r\n      {\r\n        label: 'Exchange',\r\n        href: 'https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\r\n        external: true,\r\n      },\r\n      {\r\n        label: 'Liquidity',\r\n        href: 'https://exchange.pancakeswap.finance/#/add/BNB/0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\r\n        external: true,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: 'Farms',\r\n    icon: 'FarmIcon',\r\n    href: '/farms',\r\n  },\r\n  {\r\n    label: 'Caves',\r\n    icon: 'CaveIcon',\r\n    href: '/caves',\r\n  },\r\n  {\r\n    label: 'Blizzard',\r\n    icon: 'PoolIcon',\r\n    href: '/pools',\r\n  },\r\n  {\r\n    label: 'Info',\r\n    icon: 'InfoIcon',\r\n    items: [\r\n      {\r\n        label: 'PancakeSwap',\r\n        href: 'https://pancakeswap.info/token/0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\r\n        external: true,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: 'Github',\r\n    icon: 'GithubIcon',\r\n    href: 'https://github.com/blzd-dev',\r\n    external: true,\r\n  },\r\n  {\r\n    label: 'Blog',\r\n    icon: 'MediumIcon',\r\n    href: 'https://blizzardmoney.medium.com',\r\n    external: true,\r\n  },\r\n  {\r\n    label: 'Audit',\r\n    icon: 'AuditIcon',\r\n    external: true,\r\n    href: 'https://github.com/blzd-dev/blzd-frontend/blob/master/public/files/gemzAudit.pdf',\r\n  },\r\n]\r\n\r\nexport default config\r\n","import React, { useContext } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { allLanguages } from 'config/localisation/languageCodes'\r\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { usePriceBlzdBusd } from 'state/hooks'\r\nimport { Menu as UikitMenu } from '@blzd-dev/uikit'\r\nimport config from './config'\r\n\r\nconst Menu = (props) => {\r\n  const { account, connect, reset } = useWallet()\r\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const blzdPriceUsd = usePriceBlzdBusd()\r\n\r\n  return (\r\n    <UikitMenu\r\n      account={account}\r\n      login={connect}\r\n      logout={reset}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={selectedLanguage && selectedLanguage.code}\r\n      langs={allLanguages}\r\n      setLang={setSelectedLanguage}\r\n      cakePriceUsd={blzdPriceUsd.toNumber()}\r\n      links={config}\r\n      priceLink=\"https://pancakeswap.info/token/0x57067A6BD75c0E95a6A5f158455926e43E79BeB0\"\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Page from './layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst LogoIcon = styled.div`\r\n  transition: transform 0.3s ease;\r\n  margin-bottom: 24px;\r\n  animation: pulse 1.25s ease-in-out infinite;\r\n  @keyframes pulse {\r\n    0% {\r\n      -webkit-transform: scaleX(1);\r\n      transform: scaleX(1);\r\n    }\r\n    50% {\r\n      -webkit-transform: scale3d(1.05, 1.05, 1.05);\r\n      transform: scale3d(1.05, 1.05, 1.05);\r\n    }\r\n    to {\r\n      -webkit-transform: scaleX(1);\r\n      transform: scaleX(1);\r\n    }\r\n  }\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <LogoIcon>\r\n        <img\r\n          style={{ height: 86 }}\r\n          src=\"https://www.smurf.money/images/blzd/logo.png\"\r\n          alt=\"logo\"\r\n        />\r\n      </LogoIcon>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface LabelProps {\r\n  text?: string\r\n  isFinished?: boolean\r\n}\r\n\r\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\r\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\r\n)\r\n\r\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\r\n  font-size: 14px;\r\n`\r\n\r\nexport default Label\r\n","import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@blzd-dev/uikit'\r\n\r\ninterface TextProps {\r\n  isDisabled?: boolean\r\n  fontSize?: string\r\n  color?: string\r\n}\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value?: number\r\n  decimals?: number\r\n  unit?: string\r\n}\r\n\r\nconst StyledText = styled(Text)<TextProps>`\r\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\r\n`\r\n\r\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n\r\n  return (\r\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\r\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\r\n      {value && unit && <span>{unit}</span>}\r\n    </StyledText>\r\n  )\r\n}\r\n\r\nBalance.defaultProps = {\r\n  fontSize: '32px',\r\n  isDisabled: false,\r\n  color: 'text',\r\n  decimals: 3,\r\n}\r\n\r\nexport default Balance\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@blzd-dev/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from '../../../components/TokenInput'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@blzd-dev/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from '../../../components/TokenInput'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport React, { useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@blzd-dev/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport Balance from 'components/Balance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  earnings: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(earnings)\r\n  }, [earnings])\r\n\r\n  return (\r\n    <Modal\r\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <BalanceRow>\r\n        <Balance value={Number(fullBalance)} />\r\n      </BalanceRow>\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"compound-cake\"\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(fullBalance)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CompoundModal\r\n\r\nconst BalanceRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n`\r\n","import styled from 'styled-components'\r\n\r\ninterface StyledTitleProps {\r\n  isFinished?: boolean\r\n}\r\n\r\nconst CardTitle = styled.div<StyledTitleProps>`\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 1.1;\r\n  margin-bottom: 14px;\r\n`\r\n\r\nexport default CardTitle\r\n","import styled from 'styled-components'\r\n\r\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\r\n  background: ${(props) => props.theme.card.background};\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  border-radius: 32px;\r\n  display: flex;\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\r\n  box-shadow: ${({ isActive }) =>\r\n    isActive\r\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\r\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\r\n  flex-direction: column;\r\n  position: relative;\r\n`\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport CardTitle from './CardTitle'\r\n\r\ninterface Props {\r\n  hasBalance?: boolean\r\n}\r\n\r\nconst Title = styled.div`\r\n  color: #ed4b9e;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n`\r\n\r\nconst ActionLink = styled.a`\r\n  color: #ed4b9e;\r\n  font-size: 14px;\r\n`\r\n\r\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\r\n  if (hasBalance) {\r\n    return (\r\n      <div>\r\n        <Title>Action Required</Title>\r\n        <ActionLink\r\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\r\n          target=\"_blank\"\r\n        >\r\n          What do I need to do?\r\n        </ActionLink>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CardTitle isFinished>FINISHED</CardTitle>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OldSyrupTitle\r\n","import React, { useContext, useMemo } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactNode\r\n  disabled?: boolean\r\n  href?: string\r\n  onClick?: () => void\r\n  size?: 'sm' | 'md' | 'lg'\r\n  text?: string\r\n  to?: string\r\n  variant?: 'default' | 'secondary' | 'tertiary'\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\r\n  const { colors, spacing } = useContext(ThemeContext)\r\n  const buttonColor = colors.background\r\n\r\n  let boxShadow: string\r\n  let buttonSize: number\r\n  let buttonPadding: number\r\n  let fontSize: number\r\n  switch (size) {\r\n    case 'sm':\r\n      buttonPadding = spacing[3]\r\n      buttonSize = 36\r\n      fontSize = 14\r\n      break\r\n    case 'lg':\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 72\r\n      fontSize = 16\r\n      break\r\n    case 'md':\r\n    default:\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 56\r\n      fontSize = 16\r\n  }\r\n\r\n  const ButtonChild = useMemo(() => {\r\n    if (to) {\r\n      return <StyledLink to={to}>{text}</StyledLink>\r\n    }\r\n    if (href) {\r\n      return (\r\n        <StyledExternalLink href={href} target=\"__blank\">\r\n          {text}\r\n        </StyledExternalLink>\r\n      )\r\n    }\r\n    return text\r\n  }, [href, text, to])\r\n\r\n  return (\r\n    <StyledButton\r\n      boxShadow={boxShadow}\r\n      color={buttonColor}\r\n      disabled={disabled}\r\n      fontSize={fontSize}\r\n      onClick={onClick}\r\n      padding={buttonPadding}\r\n      size={buttonSize}\r\n    >\r\n      {children}\r\n      {ButtonChild}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\ninterface StyledButtonProps {\r\n  boxShadow: string\r\n  color: string\r\n  disabled?: boolean\r\n  fontSize: number\r\n  padding: number\r\n  size: number\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\r\n  border: 0;\r\n  border-radius: 12px;\r\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-size: ${(props) => props.fontSize}px;\r\n  font-weight: 700;\r\n  height: ${(props) => props.size}px;\r\n  justify-content: center;\r\n  outline: none;\r\n  padding-left: ${(props) => props.padding}px;\r\n  padding-right: ${(props) => props.padding}px;\r\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\r\n  width: 100%;\r\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\r\n  width: 100px;\r\n  height: 30px;\r\n  font-size: 14px;\r\n  padding: 0px;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nconst StyledExternalLink = styled.a`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nexport default Button\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { ChevronDown, ChevronUp } from 'react-feather'\r\nimport { Flex } from '@blzd-dev/uikit'\r\nimport Balance from 'components/Balance'\r\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\r\nimport { useBlock } from 'state/hooks'\r\nimport { PoolCategory } from 'config/constants/types'\r\n\r\nconst tags = {\r\n  [PoolCategory.BINANCE]: BinanceTag,\r\n  [PoolCategory.CORE]: CoreTag,\r\n  [PoolCategory.COMMUNITY]: CommunityTag,\r\n}\r\n\r\ninterface Props {\r\n  projectLink: string\r\n  decimals: number\r\n  totalStaked: BigNumber\r\n  tokenName: string\r\n  tokenAddress: string\r\n  tokenDecimals: number\r\n  startBlock: number\r\n  endBlock: number\r\n  isFinished: boolean\r\n  poolCategory: PoolCategory\r\n}\r\n\r\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\r\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\r\n  padding: 24px;\r\n`\r\n\r\nconst StyledDetailsButton = styled.button`\r\n  align-items: center;\r\n  background-color: transparent;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  height: 32px;\r\n  justify-content: center;\r\n  outline: 0;\r\n  padding: 0;\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n  & > svg {\r\n    margin-left: 4px;\r\n  }\r\n`\r\n\r\nconst Details = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst Row = styled(Flex)`\r\n  align-items: center;\r\n`\r\n\r\nconst FlexFull = styled.div`\r\n  flex: 1;\r\n`\r\nconst Label = styled.div`\r\n  font-size: 14px;\r\n`\r\nconst TokenLink = styled.a`\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  cursor: pointer;\r\n`\r\n\r\nconst CardFooter: React.FC<Props> = ({\r\n  projectLink,\r\n  decimals,\r\n  totalStaked,\r\n  isFinished,\r\n  startBlock,\r\n  endBlock,\r\n  poolCategory,\r\n}) => {\r\n  const { blockNumber: currentBlock } = useBlock()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const Icon = isOpen ? ChevronUp : ChevronDown\r\n\r\n  const handleClick = () => setIsOpen(!isOpen)\r\n  const Tag = tags[poolCategory]\r\n\r\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\r\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\r\n\r\n  return (\r\n    <StyledFooter isFinished={isFinished}>\r\n      <Row>\r\n        <FlexFull>\r\n          <Tag />\r\n        </FlexFull>\r\n        <StyledDetailsButton onClick={handleClick}>\r\n          {isOpen ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')} <Icon />\r\n        </StyledDetailsButton>\r\n      </Row>\r\n      {isOpen && (\r\n        <Details>\r\n          <Row mb=\"4px\">\r\n            <FlexFull>\r\n              <Label>\r\n                <span role=\"img\" aria-label=\"syrup\">\r\n                  ❄️{' '}\r\n                </span>\r\n                {TranslateString(408, 'Total')}\r\n              </Label>\r\n            </FlexFull>\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked, decimals)} />\r\n          </Row>\r\n          {blocksUntilStart > 0 && (\r\n            <Row mb=\"4px\">\r\n              <FlexFull>\r\n                <Label>{TranslateString(409, 'Start')}:</Label>\r\n              </FlexFull>\r\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\r\n            </Row>\r\n          )}\r\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\r\n            <Row mb=\"4px\">\r\n              <FlexFull>\r\n                <Label>{TranslateString(410, 'End')}:</Label>\r\n              </FlexFull>\r\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\r\n            </Row>\r\n          )}\r\n          <TokenLink href={projectLink} target=\"_blank\">\r\n            {TranslateString(412, 'View project site')}\r\n          </TokenLink>\r\n        </Details>\r\n      )}\r\n    </StyledFooter>\r\n  )\r\n}\r\n\r\nexport default React.memo(CardFooter)\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, IconButton, useModal, AddIcon, Image } from '@blzd-dev/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Label from 'components/Label'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { useSousApprove } from 'hooks/useApprove'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useSousStake } from 'hooks/useStake'\r\nimport { useSousUnstake } from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getPoolApy } from 'utils/apy'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useSousHarvest } from 'hooks/useHarvest'\r\nimport Balance from 'components/Balance'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Pool } from 'state/types'\r\nimport { useGetApiPrice } from 'state/hooks'\r\nimport DepositModal from './DepositModal'\r\nimport WithdrawModal from './WithdrawModal'\r\nimport CompoundModal from './CompoundModal'\r\nimport CardTitle from './CardTitle'\r\nimport Card from './Card'\r\nimport OldSyrupTitle from './OldSyrupTitle'\r\nimport HarvestButton from './HarvestButton'\r\nimport CardFooter from './CardFooter'\r\n\r\ninterface HarvestProps {\r\n  pool: Pool\r\n}\r\n\r\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    harvest,\r\n    poolCategory,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    isFinished,\r\n    userData,\r\n    stakingLimit,\r\n  } = pool\r\n\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const TranslateString = useI18n()\r\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\r\n  const { account } = useWallet()\r\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\r\n  const { onStake } = useSousStake(sousId, isBnbPool)\r\n  const { onUnstake } = useSousUnstake(sousId)\r\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\r\n\r\n  // APY\r\n  const rewardTokenPrice = useGetApiPrice(earningToken.symbol)\r\n  const stakingTokenPrice = useGetApiPrice(stakingToken.symbol)\r\n  const apy = getPoolApy(\r\n    stakingTokenPrice,\r\n    rewardTokenPrice,\r\n    getBalanceNumber(pool.totalStaked, stakingToken.decimals),\r\n    parseFloat(pool.tokenPerBlock),\r\n  )\r\n\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n\r\n  const allowance = new BigNumber(userData?.allowance || 0)\r\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\r\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\r\n  const earnings = new BigNumber(userData?.pendingReward || 0)\r\n\r\n  const isOldSyrup = stakingToken.symbol === tokens.syrup.symbol\r\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\r\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\r\n  const isCardActive = isFinished && accountHasStakedBalance\r\n\r\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(earningToken.decimals))\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\r\n      onConfirm={onStake}\r\n      tokenName={stakingLimit ? `${stakingToken.symbol} (${stakingLimit} max)` : stakingToken.symbol}\r\n      // stakingTokenDecimals={stakingToken.decimals}\r\n    />,\r\n  )\r\n\r\n  const [onPresentCompound] = useModal(\r\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingToken.symbol} />,\r\n  )\r\n  const poolImage = `${pool.earningToken.symbol}-${pool.stakingToken.symbol}.png`.toLocaleLowerCase()\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal\r\n      max={stakedBalance}\r\n      onConfirm={onUnstake}\r\n      tokenName={stakingToken.symbol}\r\n      // stakingTokenDecimals={stakingToken.decimals}\r\n    />,\r\n  )\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, setRequestedApproval])\r\n\r\n  return (\r\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\r\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\r\n      <div style={{ padding: '24px' }}>\r\n        <CardTitle isFinished={isFinished && sousId !== 0}>\r\n          {isOldSyrup && '[OLD]'} {earningToken.symbol} {TranslateString(348, 'Pool')}\r\n        </CardTitle>\r\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\r\n          <div style={{ flex: 1 }}>\r\n            <Image\r\n              src={`https://raw.githubusercontent.com/blzd-dev/blzd-frontend/master/public/images/pools/${poolImage}`}\r\n              alt={earningToken.symbol}\r\n              width={64}\r\n              height={64}\r\n            />\r\n          </div>\r\n          {account && harvest && !isOldSyrup && (\r\n            <HarvestButton\r\n              disabled={!earnings.toNumber() || pendingTx}\r\n              text={pendingTx ? 'Collecting' : 'Harvest'}\r\n              onClick={async () => {\r\n                setPendingTx(true)\r\n                await onReward()\r\n                setPendingTx(false)\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        {!isOldSyrup ? (\r\n          <BalanceAndCompound>\r\n            <Balance value={getBalanceNumber(earnings, earningToken.decimals)} isDisabled={isFinished} />\r\n            {sousId === 0 && account && harvest && (\r\n              <HarvestButton\r\n                disabled={!earnings.toNumber() || pendingTx}\r\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(704, 'Compound')}\r\n                onClick={onPresentCompound}\r\n              />\r\n            )}\r\n          </BalanceAndCompound>\r\n        ) : (\r\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\r\n        )}\r\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${earningToken.symbol} earned`)} />\r\n        <StyledCardActions>\r\n          {!account && <UnlockButton />}\r\n          {account &&\r\n            (needsApproval && !isOldSyrup ? (\r\n              <div style={{ flex: 1 }}>\r\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} width=\"100%\">\r\n                  {`Approve ${stakingToken.symbol}`}\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\r\n                  style={{ width: '80%' }}\r\n                  onClick={\r\n                    isOldSyrup\r\n                      ? async () => {\r\n                          setPendingTx(true)\r\n                          await onUnstake('0')\r\n                          setPendingTx(false)\r\n                        }\r\n                      : onPresentWithdraw\r\n                  }\r\n                >\r\n                  {`Unstake ${stakingToken.symbol}`}\r\n                </Button>\r\n                <StyledActionSpacer />\r\n                {!isOldSyrup && (\r\n                  <IconButton style={{ width: '20%' }} disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\r\n                    <AddIcon color=\"white\" />\r\n                  </IconButton>\r\n                )}\r\n              </>\r\n            ))}\r\n        </StyledCardActions>\r\n        <StyledDetails>\r\n          <div>{TranslateString(736, 'APR')}:</div>\r\n          {isFinished || isOldSyrup || !apy ? (\r\n            '-'\r\n          ) : (\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy} decimals={2} unit=\"%\" />\r\n          )}\r\n        </StyledDetails>\r\n        <StyledDetails>\r\n          <div>{TranslateString(384, 'Your Stake')}:</div>\r\n          <Balance\r\n            fontSize=\"14px\"\r\n            isDisabled={isFinished}\r\n            value={getBalanceNumber(stakedBalance, stakingToken.decimals)}\r\n          />\r\n        </StyledDetails>\r\n      </div>\r\n      <CardFooter\r\n        projectLink={earningToken.projectLink}\r\n        decimals={stakingToken.decimals}\r\n        totalStaked={totalStaked}\r\n        startBlock={startBlock}\r\n        endBlock={endBlock}\r\n        isFinished={isFinished}\r\n        poolCategory={poolCategory}\r\n        tokenName={earningToken.symbol}\r\n        tokenAddress={earningToken.address ? getAddress(earningToken.address) : ''}\r\n        tokenDecimals={earningToken.decimals}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst PoolFinishedSash = styled.div`\r\n  background-image: url('https://raw.githubusercontent.com/blzd-dev/blzd-frontend/master/public/images/pool-finished-sash.svg');\r\n  background-position: top right;\r\n  background-repeat: not-repeat;\r\n  height: 135px;\r\n  position: absolute;\r\n  right: -24px;\r\n  top: -24px;\r\n  width: 135px;\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 16px 0;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n`\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n`\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledDetails = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 14px;\r\n`\r\n\r\nexport default PoolCard\r\n","import BigNumber from 'bignumber.js'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK } from 'config'\r\n\r\n/**\r\n * Get the APY value in %\r\n * @param stakingTokenPrice Token price in the same quote currency\r\n * @param rewardTokenPrice Token price in the same quote currency\r\n * @param totalStaked Total amount of stakingToken in the pool\r\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\r\n * @returns Null if the APY is NaN or infinite.\r\n */\r\nexport const getPoolApy = (\r\n  stakingTokenPrice: number,\r\n  rewardTokenPrice: number,\r\n  totalStaked: number,\r\n  tokenPerBlock: number,\r\n): number => {\r\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\r\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\r\n  const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\r\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\r\n}\r\n\r\n/**\r\n * Get farm APY value in %\r\n * @param poolWeight allocationPoint / totalAllocationPoint\r\n * @param cakePriceUsd Cake price in USD\r\n * @param poolLiquidityUsd Total pool liquidity in USD\r\n * @returns\r\n */\r\nexport const getFarmApy = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\r\n  const yearlyCakeRewardAllocation = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR).times(poolWeight)\r\n  const apy = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\r\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\r\n}\r\n\r\nexport default null\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@blzd-dev/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst PoolTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          {TranslateString(999, 'Active')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          {TranslateString(999, 'Inactive')}\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PoolTabButtons\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import React, { useMemo } from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Heading } from '@blzd-dev/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { usePools, useBlock } from 'state/hooks'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\n// import Coming from './components/Coming'\r\nimport PoolCard from './components/PoolCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport Divider from './components/Divider'\r\n\r\nconst Farm: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const pools = usePools(account)\r\n  const { blockNumber } = useBlock()\r\n\r\n  const [finishedPools, openPools] = useMemo(\r\n    () => partition(pools, (pool) => pool.isFinished || blockNumber > pool.endBlock),\r\n    [blockNumber, pools],\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <Hero>\r\n        <div>\r\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\r\n            {TranslateString(282, 'BLZD Pool')}\r\n          </Heading>\r\n          <ul>\r\n            <li>{TranslateString(580, 'Stake BLZD to earn tokens.')}</li>\r\n            <li>{TranslateString(404, 'You can unstake at any time.')}</li>\r\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\r\n          </ul>\r\n        </div>\r\n        <div style={{ textAlign: 'right' }}>\r\n          <img\r\n            src=\"https://www.smurf.money/images/blzdstakepage.png\"\r\n            alt=\"BLZD Pool icon\"\r\n          />\r\n        </div>\r\n      </Hero>\r\n      <PoolTabButtons />\r\n      <Divider />\r\n      <FlexLayout>\r\n        <Route exact path={`${path}`}>\r\n          <>\r\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\r\n              <PoolCard key={pool.sousId} pool={pool} />\r\n            ))}\r\n            {/* <Coming /> */}\r\n          </>\r\n        </Route>\r\n        <Route path={`${path}/history`}>\r\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\r\n            <PoolCard key={pool.sousId} pool={pool} />\r\n          ))}\r\n        </Route>\r\n      </FlexLayout>\r\n    </Page>\r\n  )\r\n}\r\n\r\nconst Hero = styled.div`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  display: grid;\r\n  grid-gap: 32px;\r\n  grid-template-columns: 1fr;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 250px;\r\n  padding: 48px 0;\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style-type: none;\r\n    font-size: 16px;\r\n    li {\r\n      margin-bottom: 4px;\r\n    }\r\n  }\r\n  img {\r\n    height: auto;\r\n    max-width: 396px;\r\n  }\r\n  @media (min-width: 576px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    margin: 0;\r\n    max-width: none;\r\n  }\r\n`\r\n\r\nexport default Farm\r\n","import { Nft } from './types'\r\n\r\nexport const RABBIT_MINTING_FARM_ADDRESS = '0x7c8b60d2b859a38c8B9b5B6CB4565485cb637c7a'\r\nexport const PANCAKE_RABBITS_ADDRESS = '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07'\r\n\r\nconst Nfts: Nft[] = [\r\n  {\r\n    name: 'Swapsies',\r\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\r\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\r\n    previewImage: 'swapsies-preview.png',\r\n    blurImage: 'swapsies-blur.png',\r\n    sortOrder: 999,\r\n    bunnyId: 0,\r\n  },\r\n  {\r\n    name: 'Drizzle',\r\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\r\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\r\n    previewImage: 'drizzle-preview.png',\r\n    blurImage: 'drizzle-blur.png',\r\n    sortOrder: 999,\r\n    bunnyId: 1,\r\n  },\r\n  {\r\n    name: 'Blueberries',\r\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\r\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\r\n    previewImage: 'blueberries-preview.png',\r\n    blurImage: 'blueberries-blur.png',\r\n    sortOrder: 999,\r\n    bunnyId: 2,\r\n  },\r\n  {\r\n    name: 'Circular',\r\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\r\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\r\n    previewImage: 'circular-preview.png',\r\n    blurImage: 'circular-blur.png',\r\n    sortOrder: 999,\r\n    bunnyId: 3,\r\n  },\r\n  {\r\n    name: 'Sparkle',\r\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\r\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\r\n    previewImage: 'sparkle-preview.png',\r\n    blurImage: 'sparkle-blur.png',\r\n    sortOrder: 999,\r\n    bunnyId: 4,\r\n  },\r\n]\r\n\r\nexport default Nfts\r\n","import React, { useEffect, useRef } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Modal, useModal } from '@blzd-dev/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\r\nimport { RABBIT_MINTING_FARM_ADDRESS } from 'config/constants/nfts'\r\nimport multicall from 'utils/multicall'\r\n\r\ninterface NftYouWonModalProps {\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ModalContent = styled.div`\r\n  padding: 24px;\r\n  text-align: center;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst NftYouWonModal: React.FC<NftYouWonModalProps> = ({ onDismiss }) => {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\r\n      <ModalContent>\r\n        <img\r\n          src=\"https://raw.githubusercontent.com/blzd-dev/blzd-frontend/master/public/images/present.svg\"\r\n          alt=\"You won present\"\r\n          style={{ height: '64px', marginBottom: '24px' }}\r\n        />\r\n        <Heading size=\"lg\" color=\"secondary\">\r\n          {TranslateString(999, 'You won an NFT!')}\r\n        </Heading>\r\n      </ModalContent>\r\n      <Actions>\r\n        <Button as=\"a\" href=\"/nft\">\r\n          {TranslateString(999, 'Go to claim NFT')}\r\n        </Button>\r\n      </Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\n/**\r\n * 1. Checks if nft supply available\r\n * 2. If supply is available check if the user can claim\r\n * 3. If the user can claim show a modal\r\n */\r\nconst NftGlobalNotification = () => {\r\n  const { account } = useWallet()\r\n  const [onPresentBurnModal] = useModal(<NftYouWonModal />)\r\n  const showModal = useRef(() => onPresentBurnModal())\r\n\r\n  useEffect(() => {\r\n    const checkNftStatus = async () => {\r\n      const [totalSupplyDistributedArr, currentDistributedSupplyArr, canClaimArr, hasClaimedArr] = await multicall(\r\n        rabbitmintingfarm,\r\n        [\r\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'totalSupplyDistributed' },\r\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'currentDistributedSupply' },\r\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'canClaim', params: [account] },\r\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'hasClaimed', params: [account] },\r\n        ],\r\n      )\r\n\r\n      // TODO: Figure out why these values are coming back as an array\r\n      const [totalSupplyDistributed]: [BigNumber] = totalSupplyDistributedArr\r\n      const [currentDistributedSupply]: [BigNumber] = currentDistributedSupplyArr\r\n      const [canClaim]: [boolean] = canClaimArr\r\n      const [hasClaimed]: [boolean] = hasClaimedArr\r\n\r\n      if (currentDistributedSupply.lt(totalSupplyDistributed) && canClaim && !hasClaimed) {\r\n        showModal.current()\r\n      }\r\n    }\r\n\r\n    if (account && !document.location.href.includes('/nft')) {\r\n      checkNftStatus()\r\n    }\r\n  }, [account, showModal])\r\n\r\n  return <div />\r\n}\r\n\r\nexport default NftGlobalNotification\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { exchangeXBlzd } from 'utils/callHelpers'\r\nimport { useXBlzd } from './useContract'\r\n\r\nconst useExchangeXBlzd = () => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const xBlzdContract = useXBlzd()\r\n\r\n  const handleExchange = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await exchangeXBlzd(xBlzdContract, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, xBlzdContract],\r\n  )\r\n\r\n  return { onExchange: handleExchange }\r\n}\r\nexport default useExchangeXBlzd\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from '@blzd-dev/uikit'\r\n\r\ninterface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  prefix?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', prefix }) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <Text bold fontSize={fontSize}>\r\n      {prefix}\r\n      {countUp}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n","import React from 'react'\r\nimport { Text } from '@blzd-dev/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport CardValue from './CardValue'\r\n\r\nconst BlzdWalletBalance = () => {\r\n  const TranslateString = useI18n()\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '36px' }}>\r\n        {TranslateString(298, 'Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return <CardValue value={getBalanceNumber(cakeBalance)} fontSize=\"36px\" />\r\n}\r\n\r\nexport default BlzdWalletBalance\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Button } from '@blzd-dev/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useXBlzdApprove } from 'hooks/useApprove'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { useXBlzdAllowance } from 'hooks/useAllowance'\r\nimport useExchangeXBlzd from 'hooks/useExchangeXBlzd'\r\nimport BlzdWalletBalance from './BlzdWalletBalance'\r\n\r\nconst StyledFarmStakingCard = styled(Card)``\r\n\r\nconst Block = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  justify-content: center;\r\n`\r\n\r\nconst RowBetween = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  height: 1px;\r\n  background: ${({ theme }) => theme.colors.textSubtle};\r\n  margin: 16px 0;\r\n`\r\n\r\nconst CardImage = styled.img`\r\n  margin-right: 8px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst ExchangeBLZDCard = () => {\r\n  const { account } = useWallet()\r\n  const blzdBalance = useTokenBalance(getCakeAddress())\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const allowance = useXBlzdAllowance()\r\n  const onApprove = useXBlzdApprove()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n  const { onExchange } = useExchangeXBlzd()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrExchangeButton = () => {\r\n    return isApproved ? (\r\n      <Button\r\n        style={{ width: '100%' }}\r\n        mt=\"8px\"\r\n        disabled={blzdBalance.isLessThanOrEqualTo(0)}\r\n        onClick={async () => {\r\n          await onExchange(blzdBalance.toString())\r\n        }}\r\n      >\r\n        Exchange\r\n      </Button>\r\n    ) : (\r\n      <Button style={{ width: '100%' }} mt=\"8px\" disabled={requestedApproval} onClick={handleApprove}>\r\n        Approve\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        <Heading size=\"lg\" mb=\"24px\">\r\n          Exchange BLZD to xBLZD\r\n        </Heading>\r\n        <RowBetween>\r\n          <CardImage\r\n            src=\"https://www.smurf.money/images/blzd/2.png\"\r\n            alt=\"blzd logo\"\r\n            width={64}\r\n            height={64}\r\n          />\r\n          <Block>\r\n            <Label>BLZD in Wallet</Label>\r\n            <BlzdWalletBalance />\r\n          </Block>\r\n        </RowBetween>\r\n        <Divider />\r\n        <RowBetween>\r\n          <CardImage\r\n            src=\"https://www.smurf.money/images/blzd/2.png\"\r\n            alt=\"blzd logo\"\r\n            width={64}\r\n            height={64}\r\n          />\r\n          <Block>\r\n            <Label>xBLZD</Label>\r\n            <BlzdWalletBalance />\r\n          </Block>\r\n        </RowBetween>\r\n        <Actions>{account ? renderApprovalOrExchangeButton() : <UnlockButton fullWidth />}</Actions>\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default ExchangeBLZDCard\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useCake, useLottery, useXBlzd } from './useContract'\r\nimport { getAllowance } from '../utils/erc20'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, lotteryContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve xBlzd allowance\r\nexport const useXBlzdAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const xBlzdContract = useXBlzd()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, xBlzdContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, xBlzdContract, cakeContract])\r\n\r\n  return allowance\r\n}\r\n","import React from 'react'\r\nimport Page from 'components/layout/Page'\r\nimport ExchangeBLZDCard from './components/ExchangeBLZDCard'\r\n\r\nconst XBLZD: React.FC = () => {\r\n  return (\r\n    <Page>\r\n      <ExchangeBLZDCard />\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default XBLZD\r\n","import React, { useEffect, Suspense, lazy } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { ResetCSS } from '@blzd-dev/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useFetchPriceList, useFetchPublicData } from 'state/hooks'\r\nimport useGetDocumentTitlePrice from './hooks/useGetDocumentTitlePrice'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport PageLoader from './components/PageLoader'\r\nimport Pools from './views/Pools'\r\nimport NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\r\nimport XBLZD from './views/XBLZD'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page'\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\n// const Lottery = lazy(() => import('./views/Lottery'))\r\n// const Pools = lazy(() => import('./views/Pools'))\r\n// const Ifos = lazy(() => import('./views/Ifos'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\n// const Nft = lazy(() => import('./views/Nft'))\r\n\r\n// This config is required for number formating\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  const { account, connect } = useWallet()\r\n  useEffect(() => {\r\n    if (!account && window.localStorage.getItem('connectorId')) {\r\n      connect('injected')\r\n    }\r\n  }, [account, connect])\r\n\r\n  useFetchPublicData()\r\n  useFetchPriceList()\r\n  useGetDocumentTitlePrice()\r\n\r\n  return (\r\n    <Router>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <Suspense fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/caves\">\r\n              <Farms tokenMode />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Pools />\r\n            </Route>\r\n            <Route path=\"/xBLZD\">\r\n              <XBLZD />\r\n            </Route>\r\n            {/* <Route path=\"/lottery\"> */}\r\n            {/*  <Lottery /> */}\r\n            {/* </Route> */}\r\n            {/* <Route path=\"/ifo\"> */}\r\n            {/*  <Ifos /> */}\r\n            {/* </Route> */}\r\n            {/* <Route path=\"/nft\"> */}\r\n            {/*  <Nft /> */}\r\n            {/* </Route> */}\r\n            {/* Redirect */}\r\n            {/* <Route path=\"/staking\"> */}\r\n            {/*  <Redirect to=\"/pools\" /> */}\r\n            {/* </Route> */}\r\n            {/* <Route path=\"/syrup\"> */}\r\n            {/*  <Redirect to=\"/pools\" /> */}\r\n            {/* </Route> */}\r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Menu>\r\n      <NftGlobalNotification />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { getWeb3 } from 'utils/web3'\r\n\r\nconst BlockContext = React.createContext(0)\r\n\r\nconst BlockContextProvider = ({ children }) => {\r\n  const previousBlock = useRef(0)\r\n  const [block, setBlock] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const web3 = getWeb3()\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      if (blockNumber !== previousBlock.current) {\r\n        previousBlock.current = blockNumber\r\n        setBlock(blockNumber)\r\n      }\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\r\n}\r\n\r\nexport { BlockContext, BlockContextProvider }\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport farmsReducer from './farms'\r\nimport poolsReducer from './pools'\r\nimport pricesReducer from './prices'\r\nimport blockReducer from './block'\r\n\r\nexport default configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    farms: farmsReducer,\r\n    pools: poolsReducer,\r\n    prices: pricesReducer,\r\n    block: blockReducer,\r\n  },\r\n})\r\n","import React from 'react'\r\nimport { ModalProvider } from '@blzd-dev/uikit'\r\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\r\nimport * as bsc from '@binance-chain/bsc-use-wallet'\r\nimport { Provider } from 'react-redux'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\r\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\r\nimport { BlockContextProvider } from 'contexts/BlockContext'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport store from 'state'\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  const rpcUrl = getRpcUrl()\r\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID)\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeContextProvider>\r\n        <LanguageContextProvider>\r\n          <bsc.UseWalletProvider\r\n            chainId={chainId}\r\n            connectors={{\r\n              walletconnect: { rpcUrl },\r\n              bsc,\r\n            }}\r\n          >\r\n            <BlockContextProvider>\r\n              <RefreshContextProvider>\r\n                <ModalProvider>{children}</ModalProvider>\r\n              </RefreshContextProvider>\r\n            </BlockContextProvider>\r\n          </bsc.UseWalletProvider>\r\n        </LanguageContextProvider>\r\n      </ThemeContextProvider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport Providers from './Providers'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <App />\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStatking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\n\r\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.stakingToken.address),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const callsBnbPools = bnbPool.map((poolConfig) => {\r\n    return {\r\n      address: getWbnbAddress(),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\r\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n    ...bnbPool.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n","import { AbiItem } from 'web3-utils'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst web3 = getWeb3NoAccount()\r\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'allowance',\r\n    params: [account, getAddress(p.contractAddress)],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\r\n\r\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.methods.pendingBlzd('0', account).call()\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { PoolsState, Pool } from '../types'\r\n\r\nconst initialState: PoolsState = { data: [...poolsConfig] }\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const totalStakings = await fetchPoolsTotalStatking()\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  const stakingTokenBalances = await fetchUserBalances(account)\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n  const userData = poolsConfig.map((pool) => ({\r\n    sousId: pool.sousId,\r\n    allowance: allowances[pool.sousId],\r\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n    stakedBalance: stakedBalances[pool.sousId],\r\n    pendingReward: pendingRewards[pool.sousId],\r\n  }))\r\n\r\n  dispatch(setPoolsUserData(userData))\r\n}\r\n\r\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n}\r\n\r\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const tokenBalances = await fetchUserBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n}\r\n\r\nexport default PoolsSlice.reducer\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1200px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import styled from 'styled-components'\r\nimport Container from './Container'\r\n\r\nconst Page = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default Page\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n\r\nexport default ModalActions\r\n"],"sourceRoot":""}